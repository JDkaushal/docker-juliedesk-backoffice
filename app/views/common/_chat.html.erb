<script>
    var connectedMembers = [];
    var newMessageInChat = false;
    var flashingTitle = false;
    var currentSender;

    var myName = "<%= session[:user_name] %>";
    var pusher = new Pusher('<%= Pusher.key %>');

//    function getMembersOnThread(threadId) {
//        pusher.channel('presence-thread-' + window.processingMessageThreadId);
//    }
    $(function () {


        var presenceChannel = pusher.subscribe('presence-global');
        presenceChannel.bind('pusher:subscription_succeeded', function (members) {
            connectedMembers = members.members;
            redrawConnectedMembers();
        });
        presenceChannel.bind('pusher:member_removed', function (member) {
            delete connectedMembers[member.id];
            redrawConnectedMembers()
        });
        presenceChannel.bind('pusher:member_added', function (member) {
            connectedMembers[member.id] = member.info;
            redrawConnectedMembers();
        });


        var channel = pusher.subscribe('private-global-chat');
        channel.bind('client-chat-message', function (data) {
            newMessage();
            appendMessage({
                message: data.message,
                sender: data.sender
            });
        });
        channel.bind('locks-changed', function (data) {
            if(window.redrawLocksStatuses) {
                window.redrawLocksStatuses(data.locks_statuses);
            }
        });
        channel.bind('new-email', function (data) {
            if($("audio#tada-sound").length > 0 && $(".sound-activator.activated").length > 0) {
                $("audio#tada-sound")[0].play();
            }

            $(".header .global-todo-count").animate({
                opacity: 0,
                top: 20
            }, 300, function() {
                $(".header .global-todo-count").html(data.messages_threads_count).css({
                    top: -20
                }).animate({
                            opacity: 1,
                            top: 0
                        }, 300);
            });

            if(window.newEmailCallback) {
                window.newEmailCallback();
            }
        });

        if(window.processingMessageThreadId) {
            var threadChannel = pusher.subscribe('presence-thread-' + window.processingMessageThreadId);

            threadChannel.bind('pusher:subscription_succeeded', function(members) {
//                console.log("Locked Ok");
            });
            threadChannel.bind('pusher:subscription_error', function(status) {
                $(".lock-container").fadeIn(200);
            });
        }


        $("#chat_input").keyup(function (e) {
            if (e.which == 13) {
                var message = $("#chat_input").val();
                channel.trigger('client-chat-message', {
                    message: message,
                    sender: myName
                });
                appendMessage({
                    message: message,
                    sender: myName
                });
                $("#chat_input").val("");
            }
        });

        $("#chat_input").focus(function(e) {
            newMessageInChat = false;
            redrawConnectedMembers();
        });


        $("#chat-container .connected-members").click(function(e) {
            if($("#chat-container").hasClass("minimized")) {
                $("#chat-container").removeClass("minimized");
                $("#chat-container #chat_input").focus();
            }
            else {
                $("#chat-container").addClass("minimized");
            }
        });

        _.each(getCookieMessages(), function(messageData) {
           appendMessage({
               message: messageData.message,
               sender: messageData.sender,
               only_append: true
           })
        });
    });

    function registerInCookie() {
    }

    function getCookieMessages() {
        var messagesJson = $.cookie("chat-messages");
        if(messagesJson) {
            var messages = JSON.parse(messagesJson);
            messages = _.filter(messages, function(messageData) {
                var oneMinuteAgo = moment();
                oneMinuteAgo.add("m", -5);
                return messageData.date && moment(messageData.date) > oneMinuteAgo;
            });
            $.cookie("chat-messages", JSON.stringify(messages));
            return messages;
        }
        else {
            return [];
        }
    }

    function appendMessage(params) {
        if(!params.only_append) {
            var cookieMessages = getCookieMessages();
            cookieMessages.push({
                message: params.message,
                sender: params.sender,
                date: moment().tz("UTC").format()
            });
            $.cookie("chat-messages", JSON.stringify(cookieMessages));
        }


        var sender = params.sender;
        if(params.sender == myName) {
            sender = "Me";
        }
        var $message = $("<div>").addClass("message");
        if(currentSender != params.sender) {
            $message.append($("<span>").addClass("sender").html(sender + ": "));
            currentSender = params.sender;
        }
        else {
            $message.append($("<span>").addClass("tab"));
        }

        $message.append($("<span>").html(params.message));
        $("#chat-container .messages").append($message);
        $("#chat-container .messages").scrollTop($("#chat-container .messages")[0].scrollHeight);
        if(!params.only_append) {
            $("#chat-container").removeClass("minimized");
        }
    }

    function redrawConnectedMembers() {
        $connectedMembersDiv = $("#chat-container .connected-members");

        $connectedMembersDiv.removeClass("new-message");
        if(newMessageInChat) {
            $connectedMembersDiv.addClass("new-message");
        }
        var connectedMemberNames = [];
        for(var memberId in connectedMembers) {
            connectedMemberNames.push(connectedMembers[memberId].name);
        }
        $connectedMembersDiv.html(connectedMemberNames.join(", "));
    }

    function newMessage() {
        newMessageInChat = true;
        redrawConnectedMembers();
        flashTitle();
    }

    function flashTitle(continuing) {
        if(flashingTitle && !continuing) {
            return;
        }
        flashingTitle = true;
        var windowTitle = document.title;
        document.title = "(1) - " + windowTitle;
        setTimeout(function() {
            document.title = windowTitle;
            if(newMessageInChat) {
                setTimeout(function() {
                    flashTitle(true);
                }, 1000);
            }
            else {
                flashingTitle = false;
            }
        }, 500);
    }

</script>
<div id="chat-container" class="minimized">
  <div class="connected-members"></div>
  <div class="messages"></div>

  <%= text_field_tag :chat_input, "" %>

</div>

<div class="lock-container">
  This thread is being processed by another operator
  <br>
  <a href="/">Back to home</a>
</div>