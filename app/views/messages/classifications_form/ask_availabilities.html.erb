<!--<script src="https://rawgit.com/WePopp/chrono/master/chrono.min.js"></script>-->
<script>
    window.threadDataIsEditable = true;
    window.leftColumnMessage = "<%= I18n.t("classification.dates_identification") %>";
    window.submitClassification = function() {
        var data = {
            locale: $("input[name='locale']:checked").val(),
            timezone: $("#timezone").val(),
            classification: "<%= @classification %>",
            appointment_nature: $("#appointment_nature").val(),
            summary: $("#summary").val(),
            duration: $("#duration").val(),
            location_nature: $("#location_nature").val(),
            location: $("#location").val(),
            notes: $("#notes").val(),
            private: $("#private:checked").length > 0,
            attendees: window.getInfoPanelAttendees(),
            constraints: $("#constraints").val(),
            date_times: getSuggestedDateTimes(),
            processed_in: Date.now() - window.startedAt
        };
        $.ajax({
            url: "/messages/<%= @message.id %>/classify",
            type: "POST",
            data: data,
            success: function(e) {
                window.location = e.redirect_url;
            },
            error: function(e) {
                console.log("Error: ", e);
            }
        });
    };

    var alreadySuggestedDates = <%== @message.messages_thread.suggested_date_times.map{|dt| dt.to_s}.to_json %>;
    var suggestedDates = [];
    var detectedDateId = 1;

    window.clickBackButtonFunctions = [];
    window.clickBackButton = function() {
      if(window.clickBackButtonFunctions.length == 0) {
          window.clickBackButtonDefault();
      }
      else {
          var backFunction = window.clickBackButtonFunctions.pop();
          backFunction();
      }
    };

    function initAskAvailabilities() {
        $(".messages-thread-info-panel .classic-info-panel").hide();
        $(".messages-thread-info-panel .dates-identification-panel").show();
        if(alreadySuggestedDates.length > 0) {
            $(".messages-thread-info-panel .dates-identification-panel .already-suggested-dates-container").show();
            $(".messages-thread-info-panel .dates-identification-panel .detected-dates-container").hide();
        }
        else {
            $(".messages-thread-info-panel .dates-identification-panel .already-suggested-dates-container").hide();
            $(".messages-thread-info-panel .dates-identification-panel .detected-dates-container").show();
        }
        processDateDetection();

        $("body").on("click", ".detected-date .detected-date-remove-button", function(e) {
            $(this).closest(".detected-date").remove();
        });
        $("#add-detected-date-button").click(function(e) {
            appendDetectedDateRow({
                startDate: moment()
            });
        });

        $("body").on("change", ".detected-date .detected-date-radios input[type=radio]", function(e) {
            var val = $(this).closest(".detected-date").find("input[type=radio]:checked").val();
            if(val =="freetext") {
                $(this).closest(".detected-date").find(".detected-date-freetext-container").show();
            }
            else {
                $(this).closest(".detected-date").find(".detected-date-freetext-container").hide();
            }
        });

        $("#submit-detected-date-button").click(function() {
            suggestedDates = $(".detected-dates-container .detected-dates .detected-date").map(function() {
                var $radio = $(this).find(".detected-date-radios input[type=radio]:checked");
                if($radio.length > 0 && $radio.val() == "freetext") {
                    return {
                        text: $(this).find(".detected-date-freetext").val()
                    };
                }
                else {
                    var mDate = moment.tz($(this).find(".detected-date-real-date").val() + "T" + $(this).find(".detected-date-time").val(), $(this).find(".detected-date-timezone").val());
                    return {
                        date: mDate
                    };
                }
            }).toArray();
            $(".messages-thread-info-panel .dates-identification-panel").hide();
            $(".messages-thread-info-panel .classic-info-panel").show();

            addSuggestedDatesToHeader();

            window.clickBackButtonFunctions.push(function() {
                $(".messages-thread-info-panel .dates-identification-panel").show();
                $(".messages-thread-info-panel .classic-info-panel").hide();
            });
        });

        changeAlreadySuggestedDateCheckbox();
        $(".already-suggested-dates-container .already-suggested-date").click(function(e) {
            if($(e.target).is("input[type=checkbox")) return;

            var $checkbox = $(this).find("input[type=checkbox]");
            var newValue = !$checkbox.prop("checked");
            $checkbox.prop("checked", newValue);
            changeAlreadySuggestedDateCheckbox();

        });
        $(".already-suggested-dates-container .already-suggested-date input[type=checkbox]").change(changeAlreadySuggestedDateCheckbox);


        $("#submit-these-already-suggested-dates").click(function() {
            suggestedDates = $(".already-suggested-dates-container .already-suggested-date input[type=checkbox]:checked").map(function() {
                var date = $(this).closest(".already-suggested-date").data("date");
                var timezone = $(this).closest(".already-suggested-date").data("timezone");
                return {
                    date: moment(date).tz(timezone)
                };
            }).toArray();
            $(".messages-thread-info-panel .dates-identification-panel").hide();
            $(".messages-thread-info-panel .classic-info-panel").show();

            addSuggestedDatesToHeader();

            window.clickBackButtonFunctions.push(function() {
                $(".messages-thread-info-panel .dates-identification-panel").show();
                $(".messages-thread-info-panel .classic-info-panel").hide();
            });
        });


        $("#none-of-already-suggested-dates").click(function() {
            $(".already-suggested-dates-container").hide();
            $(".detected-dates-container").show();

            window.clickBackButtonFunctions.push(function() {
                $(".already-suggested-dates-container").show();
                $(".detected-dates-container").hide();
            });
        });
    }


    function processDateDetection () {
        if(detectedDates.length == 0) {
            //runDateDetection($(".email.highlighted .body")[0]);
        }

        $(".detected-dates").html("");
        $.each(detectedDates, function() {
            $.each(this.results, function() {
                var result = this;
                if(result.start.hour) {
                    appendDetectedDateRow({
                        text: result.text,
                        startDate: moment(result.startDate)
                    });
                }
                else {
                    appendDetectedDateRow({
                        freeText: result.text,
                        startDate: moment(result.startDate)
                    });
                }

            });
        });
    }

    function removeSuggestedDatesToHeader() {
        $("#thread-header-other-entries-container").html("");
    }
    function addSuggestedDatesToHeader() {
        removeSuggestedDatesToHeader();
        var $dataEntry = $("<div>").addClass("data-entry");
        var $dataEntryName = $("<div>").addClass("data-entry-name").html("<%= I18n.t("info_box.suggested_dates") %>");
        var $dataEntryValue = $("<div>").addClass("data-entry");

        $.each(suggestedDates, function(k, v) {
            var formattedDate = "";
            if(v.date) {
                formattedDate = v.date.format(localize("email_templates.common.full_date_format"));
                formattedDate = formattedDate + "<br>";
                formattedDate = formattedDate + v.date.tz();
            }
            else {
                formattedDate = v.text;
            }

            $dataEntryValue.append($("<div>").html(formattedDate));
        });
        $dataEntry.append($dataEntryName);
        $dataEntry.append($dataEntryValue);
        $("#thread-header-other-entries-container").append($dataEntry);

        $("#thread-header-other-entries-container").append("<br/><br/>");
    }

    function appendDetectedDateRow(params) {
        var $detectedDate = $("<div>").addClass("detected-date");
        if(params.text) {
            var $detectedDateText = $("<div>").addClass("detected-date-text").html(params.text);
            $detectedDate.append($detectedDateText);
        }
        else {
            var $detectedDateRadios = $("<div>").addClass("detected-date-radios");

            var freeText = "freeText" in params;
            var dateChecked = " checked";
            var freeTextChecked = "";
            var freeTextDisplay = "none";
            if(freeText) {
                dateChecked = "";
                freeTextChecked = " checked";
                freeTextDisplay = "block";
            }
            $detectedDateRadios.append($("<input type=radio value='date' name='detected-date-kind-" + detectedDateId + "'" + dateChecked + ">"));
            $detectedDateRadios.append($("<span>").html("Date"));
            $detectedDateRadios.append($("<input type=radio value='freetext' name='detected-date-kind-" + detectedDateId + "'" + freeTextChecked + ">"));
            $detectedDateRadios.append($("<span>").html("Freetext"));
            $detectedDate.append($detectedDateRadios);

            var $detectedDateFreeTextContainer = $("<div>").addClass("detected-date-freetext-container").css({display: freeTextDisplay});
            $detectedDateFreeTextContainer.append($("<input>").addClass("detected-date-freetext").val(params.freeText));
            $detectedDate.append($detectedDateFreeTextContainer);
        }


        var mStartDate = params.startDate;
        var $detectedDateDate = $("<input>").addClass("detected-date-date").val(mStartDate.format("dddd D MMMM YYYY")).data("item", detectedDateId);
        $detectedDate.append($detectedDateDate);

        var $detectedDateRealDate = $("<input>").addClass("detected-date-real-date").attr('id', "detected-date-real-date-" + detectedDateId).val(mStartDate.format("YYYY-MM-DD"));
        $detectedDate.append($detectedDateRealDate);

        var $detectedDateTime = $("<input>").addClass("detected-date-time").val(mStartDate.format("HH:mm"));
        $detectedDate.append($detectedDateTime);

        var timezone = mStartDate.tz();
        if(!timezone) {
            timezone = window.threadTimezoneId;
        }
        var $detectedDateTimezone = $("<input>").addClass("detected-date-timezone").val(timezone);
        $detectedDate.append($detectedDateTimezone);

        var $detectedDateRemoveButton = $("<div>").addClass("detected-date-remove-button").html("x");
        $detectedDate.append($detectedDateRemoveButton);



        $(".detected-dates").append($detectedDate);

        $(".detected-dates .detected-date:last .detected-date-time").timepicker({timeFormat: 'H:i'});
        $(".detected-dates .detected-date:last .detected-date-date").each(function() {
            var $input = $(this);
            $input.datepicker({
                dateFormat: 'DD d MM yy',
                altField  : '#detected-date-real-date-' + $input.data('item'),
                altFormat : 'yy-mm-dd'
            });
        });
        $(".detected-dates .detected-date:last .detected-date-timezone").timezonePicker();

        detectedDateId += 1;
    }

    function changeAlreadySuggestedDateCheckbox() {
        $checkedCheckboxes = $(".already-suggested-dates-container .already-suggested-date input[type=checkbox]:checked");
        if($checkedCheckboxes.length == 0) {
            $("#none-of-already-suggested-dates").removeAttr("disabled");
            $("#submit-these-already-suggested-dates").attr("disabled", "disabled");
        }
        else {
            $("#none-of-already-suggested-dates").attr("disabled", "disabled");
            $("#submit-these-already-suggested-dates").removeAttr("disabled");
        }
    }

    function getSuggestedDateTimes() {
        return $.map(window.suggestedDates, function(d) {
            if(d.date) {
                return {
                    date: d.date.clone().tz("utc").format(),
                    timezone: d.date.tz()
                }
            }
            else {
                return {
                    text: d.text
                }
            }
        });
    }

    $(function(e) {
        initAskAvailabilities();
    });

</script>

