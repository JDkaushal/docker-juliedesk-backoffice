<script>
    window.timeSlotsToSuggest = [];
    window.timeSlotToCreate = null;
    window.currentEventId = null;

    window.threadLocale = "<%= @messages_thread.computed_data[:locale] %>";
    window.threadTimezoneId = "<%= @messages_thread.computed_data[:timezone] %>";

    window.threadComputedData = <%== @messages_thread.computed_data.to_json %>;
    window.startedAt = Date.now();


    <% if @julie_action.action_nature == JulieAction::JD_ACTION_SUGGEST_DATES %>
    window.calendarParams = {
        mode: "suggest_dates",
        date_times: [],
        email: "<%= @messages_thread.account_email %>",
        duration: <%= @messages_thread.computed_data[:duration] || 60 %>
    };
    <% elsif @julie_action.action_nature == JulieAction::JD_ACTION_CHECK_AVAILABILITIES %>
    window.leftColumnMessage = "Create event";
    window.calendarParams = {
        mode: "create_event",
        date_times: <%== @message.messages_thread.computed_data[:date_times].select{|dt| dt['date']}.map{|dt| dt['date']}.to_json %>,
        email: "<%= @message.messages_thread.account_email %>",
        duration: <%= @message.messages_thread.computed_data[:duration] || 60 %>
    };
    $(function() {
       $(".messages-thread-info-panel .create-event-panel").show();
    });
    <% end %>

    function initialToRecipients() {
        return <%== (JSON.parse(@message.reply_all_recipients || "{}")['to'] || []).map{|c| {name: c['email']}}.to_json %>;
    }
    function initialCcRecipients() {
        return <%== (JSON.parse(@message.reply_all_recipients || "{}")['cc'] || []).map{|c| {name: c['email']}}.to_json %>;
    }

    function possibleRecipients() {
        <% recipients = JSON.parse(@message.reply_all_recipients || "{}") || [] %>
        <% recipients_array = ((recipients['to'] || []) + (recipients['cc'] || [])).map{|c| c['email']} %>

        return <%== (@messages_thread.contacts(with_client: true).map { |c| c[:email] } + recipients_array).uniq.map{|e| {name: e}}.to_json %>;
    }

    function currentRecipients() {
        return {
            to: $.map($("#recipients-to-input").tokenInput("get"), function(elt) {
                return elt.name;
            }),
            cc: $.map($("#recipients-cc-input").tokenInput("get"), function(elt) {
                return elt.name;
            })
        };
    }


    $(function () {
        $("#show-calendar-button").click(function() {
           $(".calendar-container").removeClass("minimized");
        });
        $("body").on("click", ".time-slots-to-suggest-list-container .time-slot-to-suggest", function(e) {
            var dateTime = $(this).data("date-time");
            $(".calendar-container").removeClass("minimized");
            window.currentCalendar.goToDateTime(dateTime);
        });
        $("#recipients-to-input").tokenInput(
                possibleRecipients(),
                {
                    searchDelay: 0,
                    enableFreeInput: true,
                    hintText: '',
                    noResultsText: '',
                    searchingText: '',
                    animateDropdown: false,
                    prePopulate: initialToRecipients(),
                    preventDuplicates: true,
                    theme: 'facebook'
                });
        $("#recipients-cc-input").tokenInput(
                possibleRecipients(),
                {
                    searchDelay: 0,
                    enableFreeInput: true,
                    hintText: '',
                    noResultsText: '',
                    searchingText: '',
                    animateDropdown: false,
                    prePopulate: initialCcRecipients(),
                    preventDuplicates: true,
                    theme: 'facebook'
                });
        redrawReplyText();

        $(".left-column").scroll(function() {
            if ($(this).scrollTop() < 40) {
                $(".julie-action-title").css({top: 40});
            }
            else {
                $(".julie-action-title").css({top: $(this).scrollTop()});
            }
        });

        $("#create-event-button").click(function () {
            $("#create-event-button").attr('disabled', true);
            $(".creating-event-message").html("Creating...");
            var start = moment(window.timeSlotToCreate);
            var end = start.clone();
            end.add('m', <%= @messages_thread.computed_data[:duration] %>);

            $(".calendar-container").addClass("minimized");
            CommonHelpers.externalRequest({
                action: "create_event",
                email: "<%= @messages_thread.account_email %>",
                summary: window.threadComputedData.summary,
                description: window.threadComputedData.notes,
                attendees: <%== @messages_thread.computed_data[:attendees].map{|contact| ApplicationHelper.hash_from_parenthesized_contact contact}.to_json %>,
                location: window.threadComputedData.location,
                start: start.format(),
                end: end.format()
            }, function (e) {
                window.currentEventId = e.data.event_id;
                window.currentCalendarId = e.data.calendar_id;
                $(".messages-thread-info-panel .create-event-panel").hide();
                redrawReplyText();
                $(".messages-thread-info-panel .message-container").hide();
                $(".julie-action-title .title").html("<%= I18n.t("common.to_do") %> <%= I18n.t("actions.send_confirmation_email.todo")%>");

                window.presenters.redrawEvent({
                    accountEmail: "<%= @messages_thread.account.email %>",
                    eventId: window.currentEventId,
                    calendarId: window.currentCalendarId,
                    callback: function() {
                        setTimeout(function() {
                            $(".left-column").animate({scrollTop: $(".reply-box").offset().top - 80}, 300);
                        }, 1000);
                    }

                });

                $.ajax({
                    type: "post",
                    url: "/julie_actions/<%= @julie_action.id %>/update",
                    data: {
                        event_id: window.currentEventId,
                        calendar_id: window.currentCalendarId
                    },
                    success: function (e) {
                        $(".creating-event-message").html("Created.");
                        redrawReplyText();
                    }
                });
            }, function () {
                $(".creating-event-message").html("Problem while creating.");
                window.currentCalendar.refreshEvents();
                $("#create-event-button").removeAttr('disabled');
            });

        });

        $("#reply-button").click(function () {
            $(".reply-box #callback-message").html("Sending...");
            $("#reply-button").prop('disabled', true);

            <% if @julie_action.action_nature == JulieAction::JD_ACTION_SUGGEST_DATES %>
            $.ajax({
                url: "/julie_actions/<%= @julie_action.id %>/update",
                method: "post",
                data: {
                    text: $("textarea#reply-text").val(),
                    to: currentRecipients().to,
                    cc: currentRecipients().cc,
                    date_times: window.timeSlotsToSuggest,
                    done: true,
                    processed_in: Date.now() - window.startedAt
                }
            });
            <% elsif @julie_action.action_nature == JulieAction::JD_ACTION_CHECK_AVAILABILITIES %>
            $.ajax({
                url: "/julie_actions/<%= @julie_action.id %>/update",
                method: "post",
                data: {
                    text: $("textarea#reply-text").val(),
                    to: currentRecipients().to,
                    cc: currentRecipients().cc,
                    event_id: window.currentEventId,
                    calendar_id: window.currentCalendarId,
                    done: true,
                    processed_in: Date.now() - window.startedAt
                }
            });
            <% else %>
            $.ajax({
                url: "/julie_actions/<%= @julie_action.id %>/update",
                method: "post",
                data: {
                    text: $("textarea#reply-text").val(),
                    to: currentRecipients().to,
                    cc: currentRecipients().cc,
                    done: true,
                    processed_in: Date.now() - window.startedAt
                }
            });
            <% end %>
            $.ajax({
                url: "/messages/<%= @julie_action.message_classification.message_id %>/reply",
                method: "post",
                data: {
                    text: $("textarea#reply-text").val(),
                    to: currentRecipients().to,
                    cc: currentRecipients().cc
                },
                success: function (e) {
                    $(".reply-box #callback-message").html("Sent.");
                    $("#reply-button").removeProp('disabled');
                    window.location = "<%= messages_thread_path(@messages_thread) %>"
                },
                error: function (e) {
                    console.log("error", e);
                    $("#reply-button").removeProp('disabled');
                    $(".reply-box #callback-message").html("Error: " + e);
                }
            });
        });


        window.addEventListener("message", function (event) {
            if (event.data.message == "drawExternalEventsList") {
                window.timeSlotsToSuggest = event.data.date_times;
                redrawReplyText();
                redrawTimeSlotsToSuggestContainer();
            }
            else if (event.data.message == "drawExternalEventCreation") {
                window.timeSlotToCreate = event.data.eventStart;
                $(".suggested-date-times .suggested-date-time").removeClass("btn-primary");
                $(".suggested-date-times .suggested-date-time.other").remove();
                $(".suggested-date-times .suggested-date-time").each(function () {
                    if (moment($(this).data("date")).isSame(moment(event.data.eventStart))) {
                        $(this).addClass("btn-primary");
                    }
                });
                if ($(".suggested-date-times .suggested-date-time.btn-primary").length == 0) {
                    var dateString = moment(event.data.eventStart).locale("<%= I18n.locale %>").format("dddd DD MMMM YYYY à HH:mm");
                    $(".suggested-date-times").append(
                            $("<div>")
                                    .addClass("suggested-date-time other btn btn-sm btn-block btn-primary")
                                    .html(dateString + "<br>" + window.currentCalendar.getCalendarTimezone())
                    );
                }
                $("#create-event-button").removeAttr('disabled');
            }
        }, false);

        function redrawTimeSlotsToSuggestContainer() {
            var $container = $("#thread-header-other-entries-container");
            $container.html("");
            var $timeSlotsToSuggestDiv = $("<div>").addClass("time-slots-to-suggest-list-container");
            var $timeSlotsToSuggestListDiv = $("<div>").addClass("time-slots-to-suggest-list");
            $timeSlotsToSuggestListDiv.append($("<div>").addClass("time-slots-to-suggest-title").html("Dates sélectionnées"));
            $timeSlotsToSuggestListDiv.append($("<div>").addClass("time-slots-to-suggest-timezone").html("(" + window.threadTimezoneId + ")"));

            for (var i in window.timeSlotsToSuggest) {
                var timeSlot = timeSlotsToSuggest[i];
                var $timeSlotDiv = $("<div>").addClass("btn btn-sm btn-block btn-primary time-slot-to-suggest").data("date-time", timeSlot).html(capitalize(moment(timeSlot).tz(window.threadTimezoneId).locale(window.threadLocale).format(localize("email_templates.common.full_date_format"))));
                $timeSlotsToSuggestListDiv.append($timeSlotDiv);
            }
            $timeSlotsToSuggestDiv.append($timeSlotsToSuggestListDiv);
            $container.append($timeSlotsToSuggestDiv);
            var height = $(".time-slots-to-suggest-list").outerHeight();

            $(".time-slots-to-suggest-list-container").css({height: height});
            var $fakeDiv = $("<div>").css({
                height: height,
                width: '100%'
            });
            $container.append($fakeDiv);
        }


    });

    function redrawReplyText() {
        setCurrentLocale(window.threadLocale);
        var message = "";
        <% if @julie_action.action_nature == JulieAction::JD_ACTION_SUGGEST_DATES %>
        if (window.timeSlotsToSuggest.length > 0) {
            message = localize("email_templates.suggest_dates.before_dates", {
                client: "<%= @messages_thread.account.usage_name %>",
                appointment_nature: "<%= @messages_thread.computed_data[:appointment_nature_nature] %>",
                location: window.threadComputedData.location
            });
            if(window.threadTimezoneId != "Europe/Paris") {
                message += "\n" + localize("email_templates.common.timezone_precision", {timezone: window.threadTimezoneId.replace("_", " ")});
            }

            for (var i in window.timeSlotsToSuggest) {
                var timeSlot = timeSlotsToSuggest[i];
                message += "\n  - " + capitalize(moment(timeSlot).tz(window.threadTimezoneId).locale(window.threadLocale).format(localize("email_templates.common.full_date_format")));
            }
            message += localize("email_templates.suggest_dates.after_dates");
        }
        <% elsif @julie_action.action_nature == JulieAction::JD_ACTION_CHECK_AVAILABILITIES %>
        if (window.timeSlotToCreate) {
            var dateString = "";
            var timezoneIds = <%== @messages_thread.all_timezones.to_json %>;
            if(timezoneIds.length == 0) {
                timezoneIds = ["Europe/Paris"];
            }
            if(timezoneIds.length == 1 && timezoneIds[0] == "Europe/Paris") {
                dateString = capitalize(moment(window.timeSlotToCreate).tz(timezoneIds[0]).locale(window.threadLocale).format(localize("email_templates.common.full_date_format")));
            }
            else {
                for(var i= 0; i < timezoneIds.length; i++) {
                    if(dateString != "") {
                        dateString = dateString + "\n";
                    }
                    dateString = dateString + capitalize(moment(window.timeSlotToCreate).tz(timezoneIds[i]).locale(window.threadLocale).format(localize("email_templates.common.full_date_format"))) + " " + localize("email_templates.common.timezone_precision", {timezone: timezoneIds[i].replace("_", " ")});
                }
            }

            message = localize("email_templates.invites_sent", {
                appointment_nature: "<%= @messages_thread.computed_data[:appointment_nature_nature] %>",
                location: window.threadComputedData.location,
                date: dateString
            });
        }
        <% elsif @julie_action.action_nature == JulieAction::JD_ACTION_SEND_INFO %>
        message = localize("email_templates.info_asked");
        <% end %>
        $("textarea#reply-text").val(localize("email_templates.common.before") + message + localize("email_templates.common.after"));
        $("textarea#reply-text").elastic();
    }

    var capitalize = function (txt) {
        return txt[0].toUpperCase() + txt.substr(1);
    };
</script>
<div class="fixed-columns">
<div class="left-column">

  <%= render partial: "common/header" %>

    <div class="julie-action-title">
        <span class="title"><%= I18n.t("common.to_do") %> <%= I18n.t("actions.#{@julie_action.action_nature}.todo") %></span>
        <div id="show-calendar-button" class="btn btn-sm btn-default"><%= I18n.t("actions.show_calendar")%></div>
    </div>

    <% if @julie_action.action_nature == JulieAction::JD_ACTION_SUGGEST_DATES || @julie_action.action_nature == JulieAction::JD_ACTION_CHECK_AVAILABILITIES %>
      <%= render template: "calendar/calendar" %>
    <% end %>


    <div class="julie-action-fantom"></div>

    <div class="messages-thread-emails">

      <div class="messages-thread-subject">
        <%= @messages_thread.subject %>
      </div>
      <% @messages_thread.messages.sort_by(&:received_at).each do |message| %>
          <%= render partial: "messages_threads/email", locals: {message: message, highlight: message.id == @message.id, highlight_message: I18n.t("classifications.#{@julie_action.message_classification.classification}.action")} %>

          <% if message.id == @message.id %>
              <div class="highlighted-below-email">
                <div class="reply-box">
                  <div class="from"><%= I18n.t("common.from")%> julie@juliedesk.com</div>
                  <div class="to">
                    <span><%= I18n.t("common.to")%></span>
                    <input id="recipients-to-input"/>
                  </div>
                  <div class="cc">
                    <span><%= I18n.t("common.cc")%></span>
                    <input id="recipients-cc-input"/>
                  </div>
                  <textarea id="reply-text"></textarea>
                  <button class="btn btn-success" id="reply-button"><%= I18n.t("common.reply")%></button>
                  <div id="callback-message"></div>
                </div>
              </div>
          <% end %>
      <% end %>
    </div>


  </div>
</div>
<%= render partial: "messages_threads/info_panel", locals: {messages_thread: @messages_thread} %>