<script>
    window.timeSlotsToSuggest = [];
    window.timeSlotToCreate = null;
    window.currentEventId = null;
    <% if @julie_action.action_nature == JulieAction::JD_ACTION_SUGGEST_DATES %>
    window.calendarParams = {
        mode: "suggest_dates",
        date_times: [],
        email: "<%= @messages_thread.account_email %>",
        duration: <%= @messages_thread.computed_data[:duration] || 60 %>
    };
    <% elsif @julie_action.action_nature == JulieAction::JD_ACTION_CHECK_AVAILABILITIES %>
    window.calendarParams = {
        mode: "create_event",
        date_times: <%== @message.messages_thread.computed_data[:date_times].select{|dt| dt['date']}.map{|dt| dt['date']}.to_json %>,
        email: "<%= @message.messages_thread.account_email %>",
        duration: <%= @message.messages_thread.computed_data[:duration] || 60 %>
    };
    <% end %>


    $(function () {
        redrawReplyText();

        $(".left-column").scroll(function() {
           if($(this).scrollTop() < 40) {
               $(".julie-action-title").css({top: 40});
           }
           else {
               $(".julie-action-title").css({top: $(this).scrollTop()});
           }
        });

        $("#create-event-button").click(function () {
            $("#create-event-button").attr('disabled', true);
            $(".creating-event-message").html("Creating...");
            var start = moment(window.timeSlotToCreate);
            var end = start.clone();
            end.add('m', <%= @messages_thread.computed_data[:duration] %>);
            CommonHelpers.externalRequest({
                action: "create_event",
                email: "<%= @messages_thread.account.email %>",
                summary: "<%= @messages_thread.computed_data[:summary] %>",
                description: "<%= @messages_thread.computed_data[:notes] %>",
                attendees: <%== @messages_thread.computed_data[:attendees].map{|contact| ApplicationHelper.hash_from_parenthesized_contact contact}.to_json %>,
                location: "<%= @messages_thread.computed_data[:location] %>",
                calendar_nature: "<%= @messages_thread.account.calendar_nature %>",
                start: start.format(),
                end: end.format()
            }, function (e) {
                window.currentEventId = e.data.event_id;
                $.ajax({
                    type: "post",
                    url: "/julie_actions/<%= @julie_action.id %>/update",
                    data: {
                        event_ids: [window.currentEventId]
                    },
                    success: function (e) {
                        $(".creating-event-message").html("Created.");
                        window.currentCalendar.refreshEvents();
                        redrawReplyText();
                    }
                });
            }, function () {
                $(".creating-event-message").html("Problem while creating.");
                window.currentCalendar.refreshEvents();
                $("#create-event-button").removeAttr('disabled');
            });

        });

        $("#reply-button").click(function () {
            $(".reply-box #callback-message").html("Sending...");
            $("#reply-button").prop('disabled', true);

            <% if @julie_action.action_nature == JulieAction::JD_ACTION_SUGGEST_DATES %>
            $.ajax({
                url: "/julie_actions/<%= @julie_action.id %>/update",
                method: "post",
                data: {
                    text: $("textarea#reply-text").val(),
                    date_times: window.timeSlotsToSuggest,
                    done: true
                }
            });
            <% elsif @julie_action.action_nature == JulieAction::JD_ACTION_CHECK_AVAILABILITIES %>
            $.ajax({
                url: "/julie_actions/<%= @julie_action.id %>/update",
                method: "post",
                data: {
                    text: $("textarea#reply-text").val(),
                    event_ids: [window.currentEventId],
                    done: true
                }
            });
            <% else %>
            $.ajax({
                url: "/julie_actions/<%= @julie_action.id %>/update",
                method: "post",
                data: {
                    text: $("textarea#reply-text").val(),
                    done: true
                }
            });
            <% end %>
            $.ajax({
                url: "/messages/<%= @julie_action.message_classification.message_id %>/reply",
                method: "post",
                data: {
                    text: $("textarea#reply-text").val()
                },
                success: function (e) {
                    $(".reply-box #callback-message").html("Sent.");
                    $("#reply-button").removeProp('disabled');
                    window.location = "<%= messages_thread_path(@messages_thread) %>"
                },
                error: function (e) {
                    console.log("error", e);
                    $("#reply-button").removeProp('disabled');
                    $(".reply-box #callback-message").html("Error: " + e);
                }
            });
        });


        window.addEventListener("message", function (event) {
            if (event.data.message == "drawExternalEventsList") {
                window.timeSlotsToSuggest = event.data.date_times;
                redrawReplyText();
            }
            else if (event.data.message == "drawExternalEventCreation") {
                window.timeSlotToCreate = event.data.eventStart;
                $(".suggested-date-times .suggested-date-time").removeClass("btn-success");
                $(".suggested-date-times .suggested-date-time.other").remove();
                $(".suggested-date-times .suggested-date-time").each(function () {
                    if (moment($(this).data("date-time")).isSame(moment(event.data.eventStart))) {
                        $(this).addClass("btn-success");
                    }
                });
                if ($(".suggested-date-times .suggested-date-time.btn-success").length == 0) {
                    $(".suggested-date-times").append($("<div>").addClass("suggested-date-time other btn btn-sm btn-block btn-success").html(moment(event.data.eventStart).format("dddd DD MMMM YYYY à HH:mm")));
                }
                $("#create-event-button").removeAttr('disabled');
            }
        }, false);

        function redrawReplyText() {
            var message = "";
            <% if @julie_action.action_nature == JulieAction::JD_ACTION_SUGGEST_DATES %>
            if (window.timeSlotsToSuggest.length > 0) {
                message = "<%= @messages_thread.account.usage_name %> est disponible pour un <%= @messages_thread.computed_data[:appointment_nature_nature] %> (<%= @messages_thread.computed_data[:location] %>) :";
                for (var i in window.timeSlotsToSuggest) {
                    var timeSlot = timeSlotsToSuggest[i];
                    message += "\n  - " + capitalize(moment(timeSlot).locale("fr").format("dddd DD MMMM YYYY à HH:mm"));
                }
                message += "\n\nQuel horaire vous convient le mieux ?"
            }
            <% elsif @julie_action.action_nature == JulieAction::JD_ACTION_CHECK_AVAILABILITIES %>
            if (window.timeSlotToCreate) {
                message = "Invitations envoyées pour un <%= @messages_thread.computed_data[:appointment_nature_nature] %> (<%= @messages_thread.computed_data[:location] %>), le " + capitalize(moment(window.timeSlotToCreate).locale("fr").format("dddd DD MMMM YYYY à HH:mm")) + ".";
            }
            <% elsif @julie_action.action_nature == JulieAction::JD_ACTION_SEND_INFO %>
            message = "Voici l'information demandée : ";
            <% elsif @julie_action.action_nature == JulieAction::JD_ACTION_SEND_CONFIRMATION %>
            message = "J'ai bien noté que : ";
            <% end %>
            $("textarea#reply-text").val("Bonjour,\n\n" + message + "\n\nCordialement,\n\nJulie\nIntelligence artificielle")
            $("textarea#reply-text").elastic();
        }

        var capitalize = function (txt) {
            return txt[0].toUpperCase() + txt.substr(1);
        };
    });
</script>
<div class="fixed-columns">
<div class="left-column">

  <%= render partial: "common/header" %>

    <div class="julie-action-title">To do: <%= I18n.t("actions.#{@julie_action.action_nature}.todo") %></div>
    <div class="julie-action-fantom"></div>

    <div class="messages-thread-emails">

      <div class="messages-thread-subject">
        <%= @messages_thread.subject %>
      </div>
      <% @messages_thread.messages.each do |message| %>
          <%= render partial: "messages_threads/email", locals: {message: message, highlight: message.id == @message.id, highlight_message: I18n.t("classifications.#{@julie_action.message_classification.classification}.action")} %>

          <% if message.id == @message.id %>
              <div class="highlighted-below-email">

                <% if @julie_action.action_nature == JulieAction::JD_ACTION_SUGGEST_DATES %>
                    <%= render template: "calendar/calendar" %>
                <% elsif @julie_action.action_nature == JulieAction::JD_ACTION_CHECK_AVAILABILITIES %>
                    <%= render template: "calendar/calendar" %>
                <% else %>

                <% end %>



                <div class="reply-box">
                  <div class="from">From: julie@juliedesk.com</div>
                  <div class="from">To: <%= @messages_thread.contacts(with_client: true).map { |c| "#{c[:name]} <#{c[:email]}>" }.join(", ") %></div>
                  <textarea id="reply-text"></textarea>
                  <button class="btn btn-success" id="reply-button">Reply</button>
                  <div id="callback-message"></div>
                </div>
              </div>
          <% end %>
      <% end %>
    </div>


  </div>
</div>
<%= render partial: "messages_threads/info_panel", locals: {messages_thread: @messages_thread} %>