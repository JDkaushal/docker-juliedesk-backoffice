<script>
    window.timeSlotsToSuggest = [];
    window.timeSlotToCreate = null;
    window.currentEventId = null;

    window.threadLocale = "<%= @messages_thread.computed_data[:locale] %>";
    window.threadTimezoneId = "<%= @messages_thread.computed_data[:timezone] %>";


    <% if @julie_action.action_nature == JulieAction::JD_ACTION_SUGGEST_DATES %>
    window.calendarParams = {
        mode: "suggest_dates",
        date_times: [],
        email: "<%= @messages_thread.account_email %>",
        duration: <%= @messages_thread.computed_data[:duration] || 60 %>
    };
    <% elsif @julie_action.action_nature == JulieAction::JD_ACTION_CHECK_AVAILABILITIES %>
    window.leftColumnMessage = "Create event";
    window.calendarParams = {
        mode: "create_event",
        date_times: <%== @message.messages_thread.computed_data[:date_times].select{|dt| dt['date']}.map{|dt| dt['date']}.to_json %>,
        email: "<%= @message.messages_thread.account_email %>",
        duration: <%= @message.messages_thread.computed_data[:duration] || 60 %>
    };
    $(function() {
       $(".messages-thread-info-panel .create-event-panel").show();
    });
    <% end %>

    function initialRecipients() {

        return <%== @messages_thread.contacts(with_client: true).map { |c| {name: c[:email]} }.to_json %>;
    }

    function possibleRecipients() {
        return <%== @messages_thread.contacts(with_client: true).map { |c| {name: c[:email]} }.to_json %>;
    }

    function currentRecipients() {
        return $.map($("#recipients-input").tokenInput("get"), function(elt) {
            return elt.name;
        });
    }


    $(function () {
        $("#recipients-input").tokenInput(
                possibleRecipients(),
                {
                    searchDelay: 0,
                    enableFreeInput: true,
                    hintText: '',
                    noResultsText: '',
                    searchingText: '',
                    animateDropdown: false,
                    prePopulate: initialRecipients(),
                    preventDuplicates: true,
                    theme: 'facebook'
                });
        redrawReplyText();

        $(".left-column").scroll(function() {
            if ($(this).scrollTop() < 40) {
                $(".julie-action-title").css({top: 40});
            }
            else {
                $(".julie-action-title").css({top: $(this).scrollTop()});
            }
//            if ($("#calendar").offset().top < 40 && $("#calendar").offset().top + $("#calendar").height() > 0) {
//                $("#calendar .fc-header").css({top: 40 - $("#calendar").offset().top});
//                $("#calendar .fc-header").addClass("as-header");
//            }
//            else {
//                $("#calendar .fc-header").css({top: 0});
//                $("#calendar .fc-header").removeClass("as-header");
//            }

        });

        $("#create-event-button").click(function () {
            $("#create-event-button").attr('disabled', true);
            $(".creating-event-message").html("Creating...");
            var start = moment(window.timeSlotToCreate);
            var end = start.clone();
            end.add('m', <%= @messages_thread.computed_data[:duration] %>);
            CommonHelpers.externalRequest({
                action: "create_event",
                email: "<%= @messages_thread.account.email %>",
                summary: "<%= @messages_thread.computed_data[:summary] %>",
                description: "<%= @messages_thread.computed_data[:notes] %>",
                attendees: <%== @messages_thread.computed_data[:attendees].map{|contact| ApplicationHelper.hash_from_parenthesized_contact contact}.to_json %>,
                location: "<%= @messages_thread.computed_data[:location] %>",
                calendar_nature: "<%= @messages_thread.account.calendar_nature %>",
                start: start.format(),
                end: end.format()
            }, function (e) {
                window.currentEventId = e.data.event_id;
                $.ajax({
                    type: "post",
                    url: "/julie_actions/<%= @julie_action.id %>/update",
                    data: {
                        event_ids: [window.currentEventId]
                    },
                    success: function (e) {
                        $(".creating-event-message").html("Created.");
                        window.currentCalendar.refreshEvents();
                        redrawReplyText();
                    }
                });
            }, function () {
                $(".creating-event-message").html("Problem while creating.");
                window.currentCalendar.refreshEvents();
                $("#create-event-button").removeAttr('disabled');
            });

        });

        $("#reply-button").click(function () {
            $(".reply-box #callback-message").html("Sending...");
            $("#reply-button").prop('disabled', true);

            <% if @julie_action.action_nature == JulieAction::JD_ACTION_SUGGEST_DATES %>
            $.ajax({
                url: "/julie_actions/<%= @julie_action.id %>/update",
                method: "post",
                data: {
                    text: $("textarea#reply-text").val(),
                    to: currentRecipients(),
                    date_times: window.timeSlotsToSuggest,
                    done: true
                }
            });
            <% elsif @julie_action.action_nature == JulieAction::JD_ACTION_CHECK_AVAILABILITIES %>
            $.ajax({
                url: "/julie_actions/<%= @julie_action.id %>/update",
                method: "post",
                data: {
                    text: $("textarea#reply-text").val(),
                    event_ids: [window.currentEventId],
                    done: true
                }
            });
            <% else %>
            $.ajax({
                url: "/julie_actions/<%= @julie_action.id %>/update",
                method: "post",
                data: {
                    text: $("textarea#reply-text").val(),
                    done: true
                }
            });
            <% end %>
            $.ajax({
                url: "/messages/<%= @julie_action.message_classification.message_id %>/reply",
                method: "post",
                data: {
                    text: $("textarea#reply-text").val()
                },
                success: function (e) {
                    $(".reply-box #callback-message").html("Sent.");
                    $("#reply-button").removeProp('disabled');
                    window.location = "<%= messages_thread_path(@messages_thread) %>"
                },
                error: function (e) {
                    console.log("error", e);
                    $("#reply-button").removeProp('disabled');
                    $(".reply-box #callback-message").html("Error: " + e);
                }
            });
        });


        window.addEventListener("message", function (event) {
            if (event.data.message == "drawExternalEventsList") {
                window.timeSlotsToSuggest = event.data.date_times;
                redrawReplyText();
            }
            else if (event.data.message == "drawExternalEventCreation") {
                window.timeSlotToCreate = event.data.eventStart;
                $(".suggested-date-times .suggested-date-time").removeClass("btn-primary");
                $(".suggested-date-times .suggested-date-time.other").remove();
                $(".suggested-date-times .suggested-date-time").each(function () {
                    if (moment($(this).data("date-time")).isSame(moment(event.data.eventStart))) {
                        $(this).addClass("btn-primary");
                    }
                });
                if ($(".suggested-date-times .suggested-date-time.btn-primary").length == 0) {
                    $(".suggested-date-times").append($("<div>").addClass("suggested-date-time other btn btn-sm btn-block btn-primary").html(moment(event.data.eventStart).format("dddd DD MMMM YYYY Ã  HH:mm")));
                }
                $("#create-event-button").removeAttr('disabled');
            }
        }, false);

        function redrawReplyText() {
            setCurrentLocale(window.threadLocale);
            var message = "";
            <% if @julie_action.action_nature == JulieAction::JD_ACTION_SUGGEST_DATES %>
            if (window.timeSlotsToSuggest.length > 0) {
                message = localize("email_templates.suggest_dates.before_dates", {
                    client: "<%= @messages_thread.account.usage_name %>",
                    appointment_nature: "<%= @messages_thread.computed_data[:appointment_nature_nature] %>",
                    location: "<%= @messages_thread.computed_data[:location] %>"
                });
                if(window.threadTimezoneId != "Europe/Paris") {
                    message += localize("email_templates.common.timezone_precision", {timezone: window.threadTimezoneId.replace("_", " ")});
                }

                for (var i in window.timeSlotsToSuggest) {
                    var timeSlot = timeSlotsToSuggest[i];
                    message += "\n  - " + capitalize(moment(timeSlot).tz(window.threadTimezoneId).locale(window.threadLocale).format(localize("email_templates.common.full_date_format")));
                }
                message += localize("email_templates.suggest_dates.after_dates");
            }
            <% elsif @julie_action.action_nature == JulieAction::JD_ACTION_CHECK_AVAILABILITIES %>
            if (window.timeSlotToCreate) {
                message = localize("email_templates.invites_sent", {
                    appointment_nature: "<%= @messages_thread.computed_data[:appointment_nature_nature] %>",
                    location: "<%= @messages_thread.computed_data[:location] %>",
                    date: capitalize(moment(window.timeSlotToCreate).locale(window.threadLocale).format(localize("email_templates.common.full_date_format")))
                });
            }
            <% elsif @julie_action.action_nature == JulieAction::JD_ACTION_SEND_INFO %>
                message = localize("emails_templates.info-asked");
            <% end %>
            $("textarea#reply-text").val(localize("email_templates.common.before") + message + localize("email_templates.common.after"));
            $("textarea#reply-text").elastic();
        }

        var capitalize = function (txt) {
            return txt[0].toUpperCase() + txt.substr(1);
        };
    });
</script>
<div class="fixed-columns">
<div class="left-column">

  <%= render partial: "common/header" %>


    <% unless @julie_action.action_nature == JulieAction::JD_ACTION_CHECK_AVAILABILITIES %>
      <div class="julie-action-title">
        To do: <%= I18n.t("actions.#{@julie_action.action_nature}.todo") %>
      </div>
    <% end %>

    <div class="julie-action-fantom"></div>

    <div class="messages-thread-emails">

      <div class="messages-thread-subject">
        <%= @messages_thread.subject %>
      </div>
      <% @messages_thread.messages.each do |message| %>
          <%= render partial: "messages_threads/email", locals: {message: message, highlight: message.id == @message.id, highlight_message: I18n.t("classifications.#{@julie_action.message_classification.classification}.action")} %>

          <% if message.id == @message.id %>
              <div class="highlighted-below-email">

                <% if @julie_action.action_nature == JulieAction::JD_ACTION_SUGGEST_DATES %>
                    <%= render template: "calendar/calendar" %>
                <% elsif @julie_action.action_nature == JulieAction::JD_ACTION_CHECK_AVAILABILITIES %>
                    <%= render template: "calendar/calendar" %>
                <% else %>

                <% end %>



                <div class="reply-box">
                  <div class="from">From: julie@juliedesk.com</div>
                  <div class="to">

                    <span>To:</span>
                    <input id="recipients-input"/>
                  </div>
                  <textarea id="reply-text"></textarea>
                  <button class="btn btn-success" id="reply-button">Reply</button>
                  <div id="callback-message"></div>
                </div>
              </div>
          <% end %>
      <% end %>
    </div>


  </div>
</div>
<%= render partial: "messages_threads/info_panel", locals: {messages_thread: @messages_thread} %>