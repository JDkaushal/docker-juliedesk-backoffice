<%=render 'julie_actions/partials/travel_time_manager'%>

<script>
    window.leftColumnMessage = "Suggest dates";
    <% now = Time.now %>
    var suggestedDateTimes = <%== @messages_thread.suggested_date_times.select{|dt| dt['date'] && dt['date'] >= now}.map{|dt| dt['date']}.to_json %>

    window.drawCalendarCallback = function(){
        window.activateCalendarWithParams({
            mode: "suggest_dates",
            email: window.threadAccount.email,
            duration: window.threadComputedData.duration,
            calendarandEventsLoadedFirstTimeCallback: function() {
                addSuggestedDatesToCalendar(suggestedDateTimes);
            }
        });

        console.log(suggestedDateTimes);
//        window.timeSlotsToSuggest = _.map(suggestedDateTimes, function(dateSlot) { return dateSlot.date; });
//        window.redrawTimeSlotsToSuggestContainer();
    };

    var otherClients = function(){
        return _.filter(window.getInfoPanelAttendees(), function(attendee) {
            return attendee.isPresent && attendee.isClient && !attendee.isThreadOwner;
        });
    };

    var followUpContactsSetReplyMessage = function() {
        var message = '';
        var messageBuilder = $('#reply-area').scope();
        var threadComputedData = window.threadComputedData;
        var datesSuggestionsManager = $('#dates-suggestion-manager').scope();

        message += messageBuilder.generateReply({
            action: "follow_up_contacts",
            locale: threadComputedData.locale,
            appointment: window.getCurrentAppointment(),
            timeSlotsToSuggest: datesSuggestionsManager.getTimeSlotsSuggestionsForTemplate(),
            //timeSlotsToSuggest: window.timeSlotsToSuggest,
            usedTimezones: datesSuggestionsManager.getUsedTimezones(),
            threadMainTimezone: threadComputedData.timezone,
            client: window.threadAccount.usage_name,
            other_clients: _.filter(_.map(otherClients(), function(attendee) {
                var names = attendee.usageName.split(" ");
                if(names.length > 0) {
                    return window.helpers.capitalize(names[0]);
                }
                return null;
            }), function(name) {
                return name;
            }),
            timezoneId: threadComputedData.timezone,
            defaultTimezoneId: window.threadAccount.default_timezone_id,
            callInstructions: threadComputedData.call_instructions
        });

        window.setReplyMessage(message, "all", window.otherEmails);
    };

    window.addEventListener("message", function (event) {
        if (event.data.message == "drawExternalEventsList") {
            window.timeSlotsToSuggest = event.data.date_times;
            window.redrawTimeSlotsToSuggestContainer({forceDisplayManager: true});
            followUpContactsSetReplyMessage();

            // Scroll top on the right column to the dates propostion area
            $('.messages-thread-info-panel').animate({
                scrollTop: 0
            });
        }
    });

    function addSuggestedDatesToCalendar(dates) {
        var eventData, end;
        var currentEventDuration = currentCalendar.getCurrentDuration();

        var currentCalendarUsername = currentCalendar.initialData.default_calendar_login_username;
        var currentLoginType = currentCalendar.initialData.default_calendar_login_type;
        var currentLoginEmail = currentCalendar.initialData.email;

        _.each(dates, function(date) {
            date = moment(date);

            end = date.clone();
            end.add('m', currentEventDuration);

            eventData = currentCalendar.generateEventData({
                title: 'Already Suggested',
                start: date,
                end: end,
                calendar_login_username: currentCalendarUsername,
                calendar_login_type: currentLoginType,
                calendar_login_email: currentLoginEmail
            });

            currentCalendar.$selector.find('#calendar').fullCalendar('renderEvent', eventData, true);
            currentCalendar.addEvent(eventData);
        });

        currentCalendar.drawEventList();
    };

</script>