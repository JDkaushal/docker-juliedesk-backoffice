
<script>
    window.leftColumnMessage = "Suggest dates";
    <% now = Time.now %>
    var suggestedDateTimes = <%== @messages_thread.suggested_date_times.select{|dt| dt['date'] && dt['date'] >= now}.map{|dt| dt['date']}.uniq.to_json %>
    //var suggestedDateTimes = ['2016-10-19T23:00:00+0000', '2016-10-20T10:00:00+0000'];

    window.drawCalendarCallback = function(){
        window.activateCalendarWithParams({
            suggestedDateTimes: suggestedDateTimes,
            mode: "suggest_dates",
            email: window.threadAccount.email,
            duration: window.threadComputedData.duration,
            calendarandEventsLoadedFirstTimeCallback: function() {
                addSuggestedDatesToCalendar(suggestedDateTimes);
            }
        });
    };

    var otherClients = function(){
        return _.filter(window.getInfoPanelAttendees(), function(attendee) {
            return attendee.isPresent && attendee.isClient && !attendee.isThreadOwner;
        });
    };

    var followUpContactsSetReplyMessage = function() {
        var message = '';
        var messageBuilder = $('#reply-area').scope();
        var threadComputedData = window.threadComputedData;
        var datesSuggestionsManager = $('#dates-suggestion-manager').scope();

        message += messageBuilder.generateReply({
            action: "follow_up_contacts",
            locale: threadComputedData.locale,
            appointment: window.getCurrentAppointment(),
            timeSlotsToSuggest: datesSuggestionsManager.getTimeSlotsSuggestionsForTemplate(),
            usedTimezones: datesSuggestionsManager.getUsedTimezones(),
            threadMainTimezone: threadComputedData.timezone,
            client: window.threadAccount.usage_name,
            other_clients: _.filter(_.map(otherClients(), function(attendee) {
                var names = attendee.usageName.split(" ");
                if(names.length > 0) {
                    return window.helpers.capitalize(names[0]);
                }
                return null;
            }), function(name) {
                return name;
            }),
            timezoneId: threadComputedData.timezone,
            defaultTimezoneId: window.threadAccount.default_timezone_id,
            callInstructions: threadComputedData.call_instructions
        });

        window.setReplyMessage(message, "all", window.otherEmails);
    };

    window.addEventListener("message", function (event) {
        if (event.data.message == "drawExternalEventsList") {
            window.timeSlotsToSuggest = event.data.date_times;
            window.redrawTimeSlotsToSuggestContainer({forceDisplayManager: true});
            followUpContactsSetReplyMessage();

            // Scroll top on the right column to the dates propositions area
            $('.messages-thread-info-panel').animate({
                scrollTop: 0
            });
        }
    });

    function addSuggestedDatesToCalendar(dates) {
        var eventData, end;
        var currentEventDuration = currentCalendar.getCurrentDuration();
        var currentTimezone = currentCalendar.getCalendarTimezone();
        var datesSuggestionManager = $('#dates-suggestion-manager').scope();

//      if(window.featuresHelper.isFeatureActive('ai_dates_suggestions')) {
//        currentCalendar.addCal(_.map(dates, function(date) {
//          date = moment(date).tz(currentTimezone);
//
//          end = date.clone();
//          end.add('m', currentEventDuration);
//
//          datesSuggestionManager.addTimeSlotSuggestedByAI({value: date, fromAi: true, display: true, alreadyInsertedInCalendar: true});
//
//          return {
//            summary: 'Already Suggested',
//            start: {dateTime: date},
//            end: {dateTime: end},
//            isSuggestionFromAi: true,
//            alreadySuggested: true
//          }
//        }));
//      } else {
        var currentCalendarUsername = currentCalendar.initialData.default_calendar_login_username;
        var currentLoginType = currentCalendar.initialData.default_calendar_login_type;
        var currentLoginEmail = currentCalendar.initialData.email;

        _.each(dates, function(date) {
          date = moment(date).tz(currentTimezone);
          end = date.clone();
          end.add('m', currentEventDuration);
          eventData = currentCalendar.generateEventData({
            title: 'Already Suggested',
            start: date,
            end: end,
            calendar_login_username: currentCalendarUsername,
            calendar_login_type: currentLoginType,
            calendar_login_email: currentLoginEmail
          });
          currentCalendar.$selector.find('#calendar').fullCalendar('renderEvent', eventData, true);
          currentCalendar.addEvent(eventData);
        });
//      }

      currentCalendar.drawEventList();
    };

    var contactsFollowUpReplyFunction = function() {
      $.ajax({
        url: "/julie_actions/<%= @julie_action.id %>/update",
        method: "post",
        data: {
          text: $("textarea#reply-text").val(),
          generated_text: window.currentFullMessageWithFooter,
          to: window.currentRecipients().to,
          cc: window.currentRecipients().cc,
          done: true,
          processed_in: Date.now() - window.startedAt,
          messages_thread_id: "<%= @messages_thread.id %>",
          client_settings: window.getClientSettings(),
          date_times: window.timeSlotsToSuggest || []
        }
      });
      window.sendReply();
    };

    window.clickReplyButton = function() {
      var datesSuggestionManager = $('#dates-suggestion-manager').scope();
      datesSuggestionManager.trackSuggestedDates();
      contactsFollowUpReplyFunction();
    };

</script>