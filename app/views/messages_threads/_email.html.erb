<% email = message.server_message %>

<% operator_actions_group = (message.from_me)?message.generator_operator_actions_group(local_assigns[:operator_actions_groups]):nil %>
<script>
    $(function () {
        var $email = $(".email-<%= message.server_message_id %>");
        $email.find(".retracted, .checkbox-container").click(function (e) {
            e.stopPropagation();
        });
        $email.find(".retracted, .extended .retractable").click(function (e) {
            $(this).closest(".email").toggleClass("extended");
        });

        $email.find(".actions-menu-button").click(function (e) {
            $email.find(".actions-menu-positioner").toggleClass("visible");
            e.stopPropagation();
        });

        $email.find(".actions-menu").click(function (e) {
            e.stopPropagation();
        });

        $email.find(".notation-container .notation-option").click(function() {
            var notation = $(this).closest(".notation-container").find(".notation-option").index(this) + 1;
            setNotation(notation);
        });

        $email.find(".to-learn-button").click(function() {
            setNotation(4);
        });

        $email.find(".email-flag").click(function(e) {
            var basePath = "<%= EmailServer::API_BASE_PATH %>";
            var accessKey = "<%= EmailServer::API_ACCESS_KEY %>";
            var url = basePath + "/messages/update_labels?access_key=" + accessKey;

            var labelsToAdd = [];
            var labelsToRemove = [];
            if($(this).hasClass("flagged")) {
                $email.find(".email-flag").removeClass("flagged");
                labelsToRemove.push("flag");
            }
            else {
                $email.find(".email-flag").addClass("flagged");
                labelsToAdd.push("flag");
            }

            var messageId = "<%= message.server_message_id %>";
            $.ajax({
                type: "POST",
                url: url,
                data: {
                    message_ids: [messageId],
                    labels_to_add: labelsToAdd,
                    labels_to_remove: labelsToRemove
                },
                success: function(response) {

                }
            });
            e.stopPropagation();
        });

        $email.click(function () {
            if ($(this).closest(".actions-menu").length == 0) {
                $email.find(".actions-menu-positioner").removeClass("visible");
            }
        });

        $email.find("a.action").click(function(e) {
            e.preventDefault();
            if(!$(this).attr('disabled')) {
                $email.find(".actions-menu .spinner").show();
                window.location = $(this).attr('href') + "?started_at=" + window.startedAt;
            }
        });



        var $expandQuotes = $("<div>").html("...").addClass("expand-quotes-button");
        $email.find("blockquote, .gmail_quote").first().before($expandQuotes);

        $email.find(".expand-quotes-button").click(function(e) {
            if($email.find("blockquote.expanded, .gmail_quote.expanded").length > 0) {
                $email.find("blockquote, .gmail_quote").removeClass("expanded");
            }
            else {
                $email.find("blockquote, .gmail_quote").addClass("expanded");
            }
        });


        <% if local_assigns[:expend] %>
            $email.find("blockquote, .gmail_quote").addClass("expanded");
        <% end %>

        function setNotation(notation) {
            if(!$email.find(".full-review-container").hasClass("enabled")) {
                return;
            }
            $email.find(".notation-container").removeClass("notation-1 notation-2 notation-3 notation-4 notation-5 notation-6");
            $email.find(".notation-container").addClass("notation-" + notation);
            $email.find(".notation-container").data("value", notation);

            $email.find(".full-review-container").removeClass("already-set");

            if(notation==5) {
                $email.find(".full-review-container").removeClass("expanded");
            }
            else {
                $email.find(".full-review-container").addClass("expanded");
                $email.find(".full-review-container textarea").focus();
            }
        }
    });


</script>


<div class="email <%= (local_assigns[:highlight]) ? "highlighted" : "" %> <%= (local_assigns[:highlight] || !email['read'] || local_assigns[:last])? "extended" : "" %> email-<%= message.server_message_id %> <%= (message.from_me?) ? "from-me" : "" %>">
  <% if (local_assigns[:reviewing_status] == "review" || local_assigns[:reviewing_status] == "learn") && operator_actions_group %>
      <% notation = operator_actions_group.review_notation || 5 %>
      <div class="full-review-container <%= (notation != 5)?"expanded":"" %> <%= (operator_actions_group.review_status && local_assigns[:reviewing_status] == "review")?"already-set":""%> <%= (local_assigns[:reviewing_status] == "review")?"enabled":"" %>">
        <div class="notation-container notation-<%= notation %>" data-value="<%= notation %>" data-operator-actions-group-id="<%= operator_actions_group.id %>">
          <div class="notation-option" data-value="1"></div>
          <div class="notation-option" data-value="2"></div>
          <div class="notation-option" data-value="3"></div>
          <div class="notation-option" data-value="4"></div>
          <div class="notation-option" data-value="5"></div>
          <div class="notation-option" data-value="6"></div>
        </div>

        <div class="group-review-container">
          <input type="checkbox" <%= (operator_actions_group.group_review_status == OperatorActionsGroup::GROUP_REVIEW_STATUS_TO_LEARN)?"checked":"" %> <%= (local_assigns[:reviewing_status] == "learn")?"disabled":"" %>/> Show in group review
        </div>

        <textarea <%= (local_assigns[:reviewing_status] == "learn")?"disabled":"" %>><%= operator_actions_group.review_comment %></textarea>
        <div class="to-learn-button">Review ok</div>
        <div class="to-learn-label">To learn</div>
      </div>
  <% end %>
  <div class="email-container">
  <div class="retracted">
    <div class="checkbox-container">
      <%= check_box_tag "checkbox-message-#{message.id}", message.id %>
      <label for="checkbox-message-<%= message.id %>"></label>
    </div>

    <div class="retracted-container">
      <div class="date-and-from">
        <div class="from"><%= email['from'] %></div>

        <% if message.from_me %>
            <% if operator_actions_group %>
                <div class="operator-and-action-container">
                    <% unless local_assigns[:reviewing_status] == "learn" && operator_actions_group.operator.id != session[:operator_id] %>
                        <div class="operator"><%= operator_actions_group.operator.name %></div>
                    <% end %>
                    <div class="nature"><%= operator_actions_group.label %> (<%= display_duration(operator_actions_group.duration) %>)</div>
                </div>
            <% end %>
        <% end %>

        <div class="email-flag <%= (email['labels'].include? "flag")?"flagged":"" %>"></div>
        <div class="date"><%= I18n.l(DateTime.parse(email['date']).to_time.utc, format: "%-d %b %H:%M") %> UTC (<%= I18n.t("time_ago", time: distance_of_time_in_words_to_now(DateTime.parse(email['date']))) %>)</div>
        <div class="clear"></div>
      </div>
      <div class="snippet">
        <%= email['snippet'] %>
      </div>
    </div>
  </div>
  <div class="extended">
    <div class="retractable">
      <div class="date-and-from">
        <div class="from"><%= email['from'] %></div>

        <% if message.from_me %>
            <% if operator_actions_group %>
                <div class="operator-and-action-container">
                  <% unless local_assigns[:reviewing_status] == "learn" && operator_actions_group.operator.id != session[:operator_id] %>
                      <div class="operator"><%= operator_actions_group.operator.name %></div>
                  <% end %>
                  <div class="nature"><%= operator_actions_group.label %> (<%= display_duration(operator_actions_group.duration) %>)</div>
                </div>
            <% end %>
        <% end %>


        <div class="email-flag <%= (email['labels'].include? "flag")?"flagged":"" %>"></div>
        <div class="date"><%= I18n.l(DateTime.parse(email['date']).to_time.utc, format: "%-d %b %H:%M") %> UTC (<%= I18n.t("time_ago", time: distance_of_time_in_words_to_now(DateTime.parse(email['date']))) %>)</div>
        <div class="clear"></div>
      </div>

      <% if local_assigns[:actions_available] %>
          <div class="actions-menu-button"></div>

          <div class="actions-menu-positioner">
            <div class="actions-menu">
              <% message.messages_thread.available_classifications.each do |category, classifications| %>
                  <div class="classification-category">
                    <div class="classification-title"><%= I18n.t("classification_categories.#{category}.title") %></div>
                    <% classifications.each do |classification| %>
                        <%= link_to I18n.t("classification_categories.#{category}.classifications.#{classification}.action"), {controller: :messages, action: :classifying, id: message.id, classification: classification}, class: "action" %>
                    <% end %>
                  </div>
                  <%= image_tag "ajax-loader.gif", class: "spinner" %>
              <% end %>
            </div>
          </div>
      <% end %>

      <div class="to">
        <span class="email-label"><%= I18n.t("common.to")%></span>
        <%= email['to'] %>
      </div>
      <div class="cc">
        <span class="email-label"><%= I18n.t("common.cc")%></span>
        <%= email['cc'] %>
      </div>
    </div>

    <% if local_assigns[:highlight] && local_assigns[:highlight_message] %>
        <div class="current-action-message"><%= local_assigns[:highlight_message] %></div>
    <% end %>


    <div class="body"><%== Message.format_email_body(message) %></div>
  </div>
  </div>
</div>