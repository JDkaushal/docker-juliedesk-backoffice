<script>
    window.threadLocale = "<%= messages_thread.computed_data[:locale] %>";
    window.threadTimezoneId = "<%= messages_thread.computed_data[:timezone] %>";
    window.appointments = <%== messages_thread.account.try(:appointments).try(:to_json) || [] %>;
    window.computed = <%== messages_thread.account.try(:appointments).try(:to_json) || [] %>;

    window.threadComputedData = <%== @messages_thread.computed_data.to_json %>;
    window.threadAccount = <%== @messages_thread.account.to_json %>;

    window.otherAccountEmails = _.map(window.threadComputedData.attendees, function (attendee) {
        return attendee.account_email;
    });
    window.otherAccountEmails = _.filter(window.otherAccountEmails, function (email) {
        return email && email != "<%= @messages_thread.account_email %>";
    });

    $(function () {
        if (window.leftColumnMessage) {
            $(".messages-thread-info-panel .message-container").html(window.leftColumnMessage).show();
        }
        initAppointments();

        if (window.threadDataIsEditable) {
            if (!window.threadComputedData.appointment_nature) {
                setAppointmentValues();
            }
            $("#timezone").timezonePicker();
            $(".save-info-container").show();
            <% if messages_thread.account.calendar_nature != "google" %>
            $(".data input#private").prop('disabled', true);
            <% end %>
        }
        else {
            $(".data input, .data textarea, .data select").prop('disabled', true);
            $(".add-attendee-container").hide();
        }
        if (window.afterFormLoadedCallback) {
            window.afterFormLoadedCallback();
        }

        $("#appointment_nature").change(function () {
            setAppointmentValues();
        });

        $("input[name='locale']").change(function () {
            setNotes();
            reProcessTitle();
        });

        $("body").on("change", "input#attendee", function() {
            reProcessTitle();
        });
        $("body").on("change", "input#attendee_name", function() {
            reProcessTitle();
        });

        $("body").on("change", "select#location_nature", function () {
            setAddressValues();
        });


        $(".submit-classification").click(function () {
            $(this).attr('disabled', true);
            if (window.submitClassification) {
                window.submitClassification();
            }
        });

        $(".data #add-attendee-button").click(function (e) {
            var email = $(".data #add_attendee").val();
            $(".data #add_attendee").val("");
            var $contact = $("<div>").addClass("contact").data("email", email).data("name", "");
            $contact.append($("<input type='checkbox' checked>").val(email).attr('id', "attendee"));
            var $nameAndEmail = $("<div>").addClass("attendee-name-and-email");
            $nameAndEmail.append($("<input type='text'>").attr("id", "attendee_name").val(""));
            $nameAndEmail.append($("<div>").addClass("attendee-email").html(email));
            $contact.append($nameAndEmail);
            $(".data #contacts-data-list").append($contact);
            reProcessTitle();
        });

        <% if messages_thread.event_data[:event_id] %>

        window.presenters.redrawEvent({
            accountEmail: "<%= messages_thread.account_email %>",
            eventId: "<%= messages_thread.event_data[:event_id] %>",
            calendarId: "<%= messages_thread.event_data[:calendar_id] %>",
            threadComputedData: window.threadComputedData,
            callback: window.afterEventFetched
        });
        <% end %>

        fetchOtherAccounts();
    });



    function reProcessTitle() {
        var appointment = $.grep(window.appointments, function (v) {
            return v.label == $("#appointment_nature").val();
        })[0];
        var contactNames = $("input#attendee[type='checkbox']:checked").map(function() {
            return $(this).closest(".contact").find("input#attendee_name").val();
        }).get();
        contactNames.push(window.threadAccount.full_name);
        $("input#summary").val(appointment.title_in_calendar[$("input[name='locale']:checked").val()] + " " + contactNames.join(" / "));
    }

    function fetchOtherAccounts() {
        $(".other-accounts").hide();
        $(".other-accounts-list").html("");
        for (var i in window.otherAccountEmails) {
            var otherAccountEmail = window.otherAccountEmails[i];
            CommonHelpers.externalRequest({
                action: "show_account",
                email: otherAccountEmail
            }, function (sae) {
                $(".other-accounts").show();
                var $otherAccount = $("<div>").addClass("other-account");
                $otherAccount.append($("<div>").addClass("other-account-name").html(sae.data.full_name));
                $otherAccount.append($("<div>").addClass("other-account-email").html(sae.data.email));
                $otherAccount.append($("<div>").addClass("other-account-preferences").html(sae.data.raw_preferences));
                $otherAccount.append($("<div>").addClass("other-account-current-notes").html(sae.data.current_notes));
                $(".other-accounts-list").append($otherAccount);
            }, function (sae) {

            });
        }
    }

    function initAppointments() {
        $("select#appointment_nature").html("");
        for (var i = 0; i < window.appointments.length; i++) {
            var appointment = window.appointments[i];
            $("select#appointment_nature").append($("<option>").val(appointment.label).html(appointment.label));
        }

        if (window.threadComputedData.appointment_nature) {
            $("select#appointment_nature").find("option").prop('selected', false)
                    .filter('[value="' + window.threadComputedData.appointment_nature + '"]')
                    .prop('selected', true);
        }
        initAddresses();
        if (window.threadComputedData.location_nature) {
            $("select#location_nature").find("option").prop('selected', false)
                    .filter('[value="' + window.threadComputedData.location_nature + '"]')
                    .prop('selected', true);
        }
    }

    function initAddresses() {
        var appointment = $.grep(window.appointments, function (v) {
            return v.label == $("#appointment_nature").val();
        })[0];

        $("select#location_nature").html("");
        for (var i = 0; i < appointment.addresses_with_description.length; i++) {
            var addressObject = appointment.addresses_with_description[i];
            $("select#location_nature").append($("<option>").val(addressObject.label).html(addressObject.label));
        }
        $("select#location_nature").append($("<option>").val("Custom").html("Custom"));
    }

    function setAppointmentValues() {
        var appointment = $.grep(window.appointments, function (v) {
            return v.label == $("#appointment_nature").val();
        })[0];

        $("input#duration").val(appointment.duration);
        reProcessTitle();
        initAddresses();

        setAddressValues();
    }

    function setAddressValues() {
        var appointment = $.grep(window.appointments, function (v) {
            return v.label == $("#appointment_nature").val();
        })[0];

        var addressArray = $.grep(appointment.addresses_with_description, function (v) {
            return v.label == $("select#location_nature").val();
        });

        if (addressArray.length > 0) {
            var addressObject = addressArray[0];
            var location = addressObject.address;
            $("input#location").val(location).attr('disabled', true);
        }
        else {
            $("input#location").val("").removeAttr('disabled');
        }

        setNotes();
    }

    function setNotes() {
        var appointment = $.grep(window.appointments, function (v) {
            return v.label == $("#appointment_nature").val();
        })[0];

        var addressArray = $.grep(appointment.addresses_with_description, function (v) {
            return v.label == $("select#location_nature").val();
        });

        var notes = appointment.note[$("input[name='locale']:checked").val()];
        if (addressArray.length > 0) {
            var addressObject = addressArray[0];
            var addressComplement = addressObject.address_complement;
            if(addressComplement && addressComplement.length > 0) {
                notes = addressComplement + "\n" + notes;
            }
            $("textarea#notes").val(notes);
        }
        else {
            $("textarea#notes").val(notes);
        }
    }

    window.getInfoPanelAttendees = function() {
        return $("input#attendee[type='checkbox']:checked").map(function() {
            var $contact = $(this).closest(".contact");

            return {
                name: $contact.find("input#attendee_name").val(),
                email: $contact.find(".attendee-email").html()
            };
        }).get();
    };
</script>

<div class="messages-thread-info-panel">

  <div class="message-container"></div>

  <div id="thread-header-other-entries-container"></div>

  <%= render partial: "messages_threads/created_event_panel" %>

  <%= render partial: "messages_threads/create_event_panel", locals: {messages_thread: messages_thread, julie_action: local_assigns[:julie_action]} %>


  <div class="classic-info-panel">


    <div class="account">
      <% account = messages_thread.account %>
      <% if account %>
          <%= account.usage_name %> (<%= messages_thread.account.email %>)
          <div class="account-details">
            <%= simple_format account.raw_preferences %>
            <%= text_area_tag :current_notes, account.current_notes, class: "current-notes form-control", disabled: true %>
          </div>
          <div class="other-accounts">
            <div class="other-accounts-title">Other accounts</div>
            <div class="other-accounts-list"></div>
          </div>
      <% else %>
          <%= I18n.t("info_box.no_account_found") %>
      <% end %>
    </div>


    <div class="data">
      <div class="data-entry">
        <div class="data-entry-name"><%= I18n.t("info_box.locale") %></div>
        <div class="semi-data-entry">
          <%= radio_button_tag :locale, "fr", (messages_thread.computed_data[:locale] != "en") %> <%= I18n.t("info_box.french") %>
        </div>
        <div class="semi-data-entry">
          <%= radio_button_tag :locale, "en", (messages_thread.computed_data[:locale] == "en") %> <%= I18n.t("info_box.english") %>
        </div>
      </div>

      <div class="data-entry">
        <div class="data-entry-name"><%= I18n.t("info_box.timezone") %></div>
        <%= text_field_tag :timezone, messages_thread.computed_data[:timezone], class: "data-entry form-control" %>
      </div>

      <div class="data-entry">
        <div class="data-entry-name"><%= I18n.t("info_box.ticket_notes") %></div>
        <%= text_area_tag :constraints, messages_thread.computed_data[:constraints], class: "data-entry form-control" %>
      </div>

      <div class="data-entry">
        <div class="data-entry-name"><%= I18n.t("info_box.appointment_type") %></div>
        <%= select_tag :appointment_nature, "", class: "data-entry form-control" %>
      </div>

      <div class="data-entry">
        <div class="data-entry-name"><%= I18n.t("info_box.attendees") %></div>
        <div class="data-entry-value" id="contacts-data-list">
          <% attendees = messages_thread.computed_data[:attendees] || [] %>
          <% (messages_thread.contacts() + attendees.map(&:symbolize_keys)).uniq { |co| co[:email] }.each do |contact| %>
              <% attendee = attendees.select { |att| att['email'] == contact[:email] }.first %>
              <% checked = attendees == [] || attendee %>
              <div class="contact" data-email="<%= contact[:email] %>" data-name="<%= contact[:name] %>">
                <%= check_box_tag :attendee, contact[:email], checked %>
                <div class="attendee-name-and-email">
                  <%= text_field_tag :attendee_name, attendee.try(:[], 'name') || contact[:name] %>
                  <div class="attendee-email"><%= contact[:email] %></div>
                </div>

              </div>
          <% end %>
        </div>
        <div class="add-attendee-container">
          <%= text_field_tag :add_attendee, "", class: "" %>
          <div id="add-attendee-button" class="btn btn-xs btn-primary"><%= I18n.t("common.add") %></div>
        </div>
      </div>



      <div class="data-entry">
        <div class="data-entry-name"><%= I18n.t("info_box.summary") %></div>
        <%= text_field_tag :summary, messages_thread.computed_data[:summary], class: "data-entry form-control" %>
      </div>

      <div class="data-entry">
        <div class="data-entry-name"><%= I18n.t("info_box.duration") %></div>
        <%= text_field_tag :duration, messages_thread.computed_data[:duration], class: "data-entry form-control" %>
      </div>

      <div class="data-entry">
        <div class="data-entry-name"><%= I18n.t("info_box.location") %></div>
        <%= select_tag :location_nature, "", class: "data-entry form-control" %>
        <%= text_field_tag :location, messages_thread.computed_data[:location], class: "data-entry form-control" %>
      </div>



      <div class="data-entry">
        <div class="data-entry-name"><%= I18n.t("info_box.private_event") %></div>
        <div class="data-entry-value">
          <%= check_box_tag :private, "", messages_thread.computed_data[:private] %>
          <%= I18n.t("info_box.private_event") %>
        </div>
      </div>

      <div class="data-entry">
        <div class="data-entry-name"><%= I18n.t("info_box.notes") %></div>
        <%= text_area_tag :notes, messages_thread.computed_data[:notes], class: "data-entry form-control" %>
      </div>

      <div class="save-info-container">
        <br>
        <br>
        <button class="btn btn-block btn-success submit-classification"><%= I18n.t("common.save") %></button>
      </div>
    </div>
  </div>

  <%= render partial: "messages_threads/dates_identification_panel", locals: {messages_thread: messages_thread} %>
</div>