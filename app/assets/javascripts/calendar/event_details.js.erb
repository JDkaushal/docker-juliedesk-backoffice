Calendar.prototype.showEventDetails = function(event, $currentTarget) {
    var calendar = this;

    calendar.redrawEventDetailsFromEvent(event);

    // Positioning
    if($currentTarget) {
        calendar.$currentEventTarget = $currentTarget;
    }

    var $edc = calendar.$selector.find("#event-details-container");

    if(calendar.currentEvent.allDay) {
        $edc.find(".event-tile-container").css({
            position: 'absolute',
            top: "auto",
            left: (calendar.$selector.width() - $edc.find(".event-tile-container").width()) / 2,
            right: "auto",
            bottom: 20
        });
    }
    else {
        if(calendar.$currentEventTarget.offset().left < calendar.$selector.width() / 2) {
            $edc.find(".event-tile-container").css({
                position: 'absolute',
                top: (calendar.$selector.height() - $edc.find(".event-tile-container").outerHeight()) / 2,
                left: calendar.$currentEventTarget.offset().left + calendar.$currentEventTarget.width() + 10,
                right: "auto",
                bottom: "auto"
            });
        }
        else {
            var right = 0;
            if($(".fixed-columns").length > 0) {
                right = $(".fixed-columns").width() - calendar.$currentEventTarget.offset().left + 10
            }
            else {
                right = calendar.$selector.width() - calendar.$currentEventTarget.offset().left + 10
            }
            $edc.find(".event-tile-container").css({
                position: 'absolute',
                top: (calendar.$selector.height() - $edc.find(".event-tile-container").outerHeight()) / 2,
                right: right,
                left: "auto",
                bottom: "auto"
            });
        }
    }

};

Calendar.prototype.redrawEventDetailsFromEvent = function(event) {
    var calendar = this;
    var $container = calendar.$selector.find("#event-details-container");
    //console.log(event);
    var locale = "en";
    if(window.threadComputedData) {
        locale = window.threadComputedData.locale;
    }

    calendar.currentEvent = event;
    calendar.currentEventTile = new EventTile($container, {
        timezoneId: calendar.getCalendarTimezone(),
        mode: calendar.getMode(),
        event: event,
        eventId: event.id,
        eventUrl: event.url,
        calendarId: event.calId,
        accountEmail: calendar.findAccountEmailForEvent(event),
        uxElement: 'calendar',
        locale: locale,
        selectEventCallback: function(selectingOccurrence) {
          selectingOccurrence = selectingOccurrence || false;
            // - - - - - - - - - - - - - - - - - -
            // Fix for postponing events on calendars that load attendees on details
            calendar.currentEvent.attendees = calendar.currentEventTile.event.attendees;
            // - - - - - - - - - - - - - - - - - -
            calendar.selectEvent(calendar.currentEvent, selectingOccurrence);
            $container.fadeOut(200);
            //calendar.showEventDetails(calendar.currentEvent);
        },
        doneEditingCallback: function(params) {
            $container.fadeOut(200);

            if(params.action == 'cancel_event_creation') {
                calendar.addEvent(null);
            } else {
                calendar.refreshEvents();
            }
        }
    });
    calendar.$selector.find("#event-details-container").fadeIn(200);

    if(calendar.currentEvent.preview) {
        calendar.currentEventTile.fetchEvent(function() {
            calendar.currentEventTile.redraw();
        });
    }


    calendar.currentEventTile.fetchRecurringEventIfNeeded({
        dont_fetch: calendar.initialData.as_at_date != undefined,
        callback: function() {

        }
    });
};

Calendar.prototype.clickEventDetailsContainer = function(e) {
    var calendar = this;
    var $container = calendar.$selector.find("#event-details-container");
    var $target = $(e.target);

    if(calendar.initialData.selectEventInCalendarCallback) {
        calendar.initialData.selectEventInCalendarCallback(null);
    }

    if($target.closest(".event-tile-container").length == 0) {
        $container.fadeOut(200);
        if(calendar.getMode() == "free_calendar" || calendar.getMode() == "create_events") {
            calendar.addEvent(null);
        }
    }
};