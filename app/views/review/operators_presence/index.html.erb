<script>
    var presenceFormat = "YYYYMMDDTHHmm00";
    var app = angular.module("backofficeApp", []);
    app.controller("OperatorsPresenceCtrl", function($scope, $http, $sce) {


        $scope.startWeekDate = moment.tz('Indian/Antananarivo').startOf("isoweek").utc().add(6, 'h');
        $scope.endWeekDate = $scope.startWeekDate.clone().endOf("isoweek");

        // Based on september
        //$scope.countsToMatch = {"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":2,"107":2,"108":3,"109":3,"110":3,"111":2,"112":4,"113":4,"114":4,"115":4,"116":3,"117":3,"118":3,"119":2,"120":2,"121":2,"122":1,"123":1,"200":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":2,"207":3,"208":3,"209":3,"210":2,"211":2,"212":3,"213":3,"214":3,"215":4,"216":4,"217":3,"218":3,"219":2,"220":1,"221":2,"222":1,"223":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":2,"307":2,"308":3,"309":4,"310":3,"311":2,"312":3,"313":4,"314":4,"315":4,"316":3,"317":3,"318":3,"319":2,"320":2,"321":2,"322":2,"323":1,"400":1,"401":1,"402":1,"403":1,"404":1,"405":2,"406":2,"407":3,"408":4,"409":3,"410":3,"411":3,"412":3,"413":4,"414":3,"415":4,"416":3,"417":3,"418":2,"419":2,"420":2,"421":1,"422":1,"423":1,"500":1,"501":1,"502":1,"503":1,"504":1,"505":1,"506":2,"507":3,"508":3,"509":3,"510":2,"511":2,"512":3,"513":4,"514":2,"515":4,"516":3,"517":2,"518":1,"519":1,"520":1,"521":1,"522":1,"523":1,"600":1,"601":1,"602":1,"603":0,"604":1,"605":1,"606":1,"607":1,"608":1,"609":1,"610":1,"611":1,"612":1,"613":1,"614":1,"615":1,"616":1,"617":1,"618":1,"619":1,"620":1,"621":1,"622":1,"623":0,"700":1,"701":1,"702":0,"703":0,"704":0,"705":0,"706":0,"707":1,"708":1,"709":1,"710":1,"711":1,"712":1,"713":1,"714":1,"715":1,"716":1,"717":1,"718":1,"719":1,"720":1,"721":1,"722":1,"723":1};

        // Based on october
        // $scope.countsToMatch = {"100":1,"101":1,"102":1,"103":0,"104":1,"105":1,"106":1,"107":1,"108":3,"109":4,"110":4,"111":3,"112":3,"113":4,"114":4,"115":5,"116":4,"117":3,"118":4,"119":3,"120":2,"121":2,"122":3,"123":1,"200":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":1,"207":2,"208":4,"209":4,"210":4,"211":3,"212":3,"213":4,"214":5,"215":4,"216":6,"217":5,"218":4,"219":3,"220":2,"221":2,"222":2,"223":2,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":3,"309":3,"310":3,"311":3,"312":1,"313":3,"314":3,"315":4,"316":4,"317":5,"318":3,"319":2,"320":1,"321":2,"322":2,"323":1,"400":1,"401":1,"402":1,"403":1,"404":1,"405":1,"406":1,"407":1,"408":3,"409":3,"410":4,"411":3,"412":3,"413":3,"414":4,"415":5,"416":4,"417":5,"418":4,"419":3,"420":3,"421":3,"422":2,"423":2,"500":1,"501":1,"502":1,"503":1,"504":1,"505":1,"506":1,"507":2,"508":3,"509":3,"510":4,"511":3,"512":2,"513":3,"514":4,"515":4,"516":4,"517":4,"518":3,"519":2,"520":2,"521":2,"522":1,"523":1,"600":1,"601":1,"602":1,"603":1,"604":1,"605":1,"606":1,"607":1,"608":1,"609":1,"610":1,"611":1,"612":1,"613":1,"614":1,"615":1,"616":1,"617":1,"618":1,"619":1,"620":1,"621":1,"622":1,"623":1,"700":1,"701":1,"702":0,"703":1,"704":1,"705":1,"706":0,"707":0,"708":1,"709":1,"710":1,"711":1,"712":1,"713":1,"714":1,"715":2,"716":1,"717":1,"718":1,"719":1,"720":1,"721":1,"722":1,"723":1};
        // $scope.countsToMatch = {"100":1,"101":1,"102":0,"103":1,"104":1,"105":1,"106":1,"107":3,"108":4,"109":5,"110":4,"111":3,"112":3,"113":4,"114":6,"115":4,"116":5,"117":5,"118":4,"119":2,"120":2,"121":3,"122":2,"123":1,"200":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":2,"207":3,"208":4,"209":3,"210":3,"211":3,"212":4,"213":5,"214":5,"215":6,"216":5,"217":5,"218":4,"219":3,"220":2,"221":2,"222":2,"223":1,"300":2,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":2,"308":3,"309":4,"310":3,"311":3,"312":4,"313":4,"314":5,"315":5,"316":5,"317":4,"318":3,"319":2,"320":2,"321":2,"322":2,"323":2,"400":1,"401":1,"402":1,"403":1,"404":1,"405":1,"406":1,"407":2,"408":3,"409":4,"410":4,"411":3,"412":3,"413":5,"414":5,"415":5,"416":5,"417":4,"418":3,"419":3,"420":3,"421":3,"422":2,"423":1,"500":1,"501":1,"502":1,"503":1,"504":1,"505":1,"506":1,"507":3,"508":3,"509":3,"510":4,"511":2,"512":3,"513":3,"514":4,"515":4,"516":4,"517":3,"518":2,"519":2,"520":2,"521":1,"522":1,"523":1,"600":1,"601":1,"602":1,"603":1,"604":1,"605":1,"606":1,"607":1,"608":1,"609":1,"610":1,"611":1,"612":1,"613":1,"614":1,"615":1,"616":1,"617":1,"618":1,"619":1,"620":1,"621":1,"622":1,"623":1,"700":0,"701":1,"702":1,"703":1,"704":1,"705":0,"706":0,"707":0,"708":1,"709":1,"710":1,"711":1,"712":1,"713":1,"714":1,"715":1,"716":1,"717":1,"718":1,"719":1,"720":1,"721":1,"722":1,"723":1};
        // Based on november
        //$scope.countsToMatch = {"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":2,"108":4,"109":5,"110":5,"111":4,"112":3,"113":5,"114":6,"115":5,"116":6,"117":5,"118":4,"119":2,"120":2,"121":3,"122":2,"123":2,"200":2,"201":2,"202":1,"203":1,"204":1,"205":1,"206":1,"207":1,"208":4,"209":3,"210":4,"211":3,"212":4,"213":4,"214":4,"215":6,"216":6,"217":6,"218":4,"219":3,"220":3,"221":2,"222":2,"223":2,"300":2,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":2,"308":3,"309":4,"310":4,"311":4,"312":3,"313":4,"314":4,"315":4,"316":4,"317":4,"318":3,"319":2,"320":3,"321":2,"322":2,"323":2,"400":2,"401":1,"402":1,"403":1,"404":1,"405":1,"406":2,"407":2,"408":3,"409":4,"410":5,"411":4,"412":3,"413":5,"414":5,"415":7,"416":4,"417":5,"418":3,"419":3,"420":3,"421":3,"422":2,"423":2,"500":1,"501":1,"502":2,"503":1,"504":1,"505":1,"506":1,"507":1,"508":4,"509":3,"510":4,"511":3,"512":3,"513":4,"514":4,"515":5,"516":4,"517":4,"518":3,"519":3,"520":2,"521":2,"522":1,"523":2,"600":1,"601":1,"602":1,"603":1,"604":1,"605":1,"606":1,"607":1,"608":1,"609":1,"610":1,"611":1,"612":1,"613":1,"614":1,"615":1,"616":1,"617":1,"618":1,"619":1,"620":1,"621":1,"622":1,"623":1,"700":0,"701":1,"702":1,"703":0,"704":0,"705":0,"706":0,"707":0,"708":1,"709":1,"710":1,"711":1,"712":1,"713":1,"714":1,"715":1,"716":1,"717":2,"718":1,"719":1,"720":2,"721":2,"722":1,"723":1};
        // Based on november / January
        // $scope.countsToMatch = {"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":2,"108":3,"109":5,"110":5,"111":5,"112":3,"113":5,"114":6,"115":6,"116":6,"117":6,"118":4,"119":4,"120":3,"121":3,"122":3,"123":2,"200":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":2,"207":2,"208":4,"209":5,"210":5,"211":3,"212":3,"213":4,"214":6,"215":7,"216":7,"217":6,"218":5,"219":4,"220":3,"221":4,"222":3,"223":2,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":2,"308":3,"309":5,"310":5,"311":4,"312":4,"313":4,"314":5,"315":5,"316":5,"317":5,"318":3,"319":3,"320":3,"321":3,"322":3,"323":2,"400":2,"401":1,"402":1,"403":1,"404":1,"405":1,"406":1,"407":2,"408":3,"409":4,"410":5,"411":3,"412":3,"413":4,"414":5,"415":5,"416":4,"417":5,"418":3,"419":3,"420":3,"421":3,"422":2,"423":1,"500":1,"501":1,"502":1,"503":1,"504":1,"505":1,"506":1,"507":2,"508":4,"509":4,"510":4,"511":4,"512":3,"513":4,"514":4,"515":5,"516":5,"517":4,"518":3,"519":3,"520":2,"521":2,"522":1,"523":1,"600":1,"601":1,"602":1,"603":1,"604":1,"605":1,"606":1,"607":1,"608":1,"609":1,"610":1,"611":1,"612":1,"613":1,"614":1,"615":1,"616":1,"617":1,"618":1,"619":1,"620":1,"621":1,"622":1,"623":0,"700":1,"701":1,"702":0,"703":1,"704":1,"705":1,"706":1,"707":1,"708":1,"709":1,"710":1,"711":1,"712":1,"713":1,"714":1,"715":1,"716":1,"717":2,"718":2,"719":1,"720":1,"721":2,"722":1,"723":1};


        //$scope.countsToMatch = {"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":2,"108":5,"109":7,"110":6,"111":7,"112":5,"113":7,"114":8,"115":9,"116":7,"117":8,"118":5,"119":5,"120":5,"121":4,"122":3,"123":3,"200":2,"201":2,"202":1,"203":1,"204":1,"205":1,"206":2,"207":3,"208":5,"209":6,"210":6,"211":6,"212":4,"213":6,"214":8,"215":9,"216":9,"217":9,"218":6,"219":5,"220":4,"221":5,"222":3,"223":3,"300":3,"301":2,"302":1,"303":1,"304":1,"305":1,"306":2,"307":3,"308":5,"309":7,"310":7,"311":6,"312":5,"313":7,"314":9,"315":7,"316":8,"317":8,"318":6,"319":5,"320":5,"321":4,"322":3,"323":2,"400":3,"401":1,"402":1,"403":1,"404":1,"405":1,"406":2,"407":3,"408":6,"409":7,"410":6,"411":4,"412":5,"413":6,"414":6,"415":8,"416":8,"417":7,"418":6,"419":5,"420":4,"421":4,"422":3,"423":2,"500":2,"501":1,"502":1,"503":1,"504":1,"505":1,"506":2,"507":3,"508":4,"509":6,"510":6,"511":5,"512":4,"513":5,"514":5,"515":7,"516":7,"517":6,"518":4,"519":5,"520":3,"521":3,"522":3,"523":2,"600":2,"601":1,"602":1,"603":1,"604":1,"605":1,"606":0,"607":1,"608":1,"609":1,"610":1,"611":1,"612":1,"613":1,"614":1,"615":1,"616":2,"617":2,"618":2,"619":1,"620":1,"621":1,"622":1,"623":1,"700":1,"701":1,"702":0,"703":1,"704":1,"705":1,"706":1,"707":1,"708":1,"709":1,"710":1,"711":1,"712":1,"713":1,"714":1,"715":1,"716":1,"717":2,"718":2,"719":1,"720":2,"721":1,"722":1,"723":1};
        $scope.countsToMatch = {"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":2,"107":5,"108":7,"109":6,"110":7,"111":5,"112":7,"113":8,"114":9,"115":7,"116":8,"117":5,"118":5,"119":5,"120":4,"121":3,"122":3,"199":2,"200":2,"201":1,"202":1,"203":1,"204":1,"205":2,"206":3,"207":5,"208":6,"209":6,"210":6,"211":4,"212":6,"213":8,"214":9,"215":9,"216":9,"217":6,"218":5,"219":4,"220":5,"221":3,"222":3,"299":3,"300":2,"301":1,"302":1,"303":1,"304":1,"305":2,"306":3,"307":5,"308":7,"309":7,"310":6,"311":5,"312":7,"313":9,"314":7,"315":8,"316":8,"317":6,"318":5,"319":5,"320":4,"321":3,"322":2,"399":3,"400":1,"401":1,"402":1,"403":1,"404":1,"405":2,"406":3,"407":6,"408":7,"409":6,"410":4,"411":5,"412":6,"413":6,"414":8,"415":8,"416":7,"417":6,"418":5,"419":4,"420":4,"421":3,"422":2,"499":2,"500":1,"501":1,"502":1,"503":1,"504":1,"505":2,"506":3,"507":4,"508":6,"509":6,"510":5,"511":4,"512":5,"513":5,"514":7,"515":7,"516":6,"517":4,"518":5,"519":3,"520":3,"521":3,"522":2,"599":2,"600":1,"601":1,"602":1,"603":1,"604":1,"605":0,"606":1,"607":1,"608":1,"609":1,"610":1,"611":1,"612":1,"613":1,"614":1,"615":2,"616":2,"617":2,"618":1,"619":1,"620":1,"621":1,"622":1,"699":1,"700":1,"701":0,"702":1,"703":1,"704":1,"705":1,"706":1,"707":1,"708":1,"709":1,"710":1,"711":1,"712":1,"713":1,"714":1,"715":1,"716":2,"717":2,"718":1,"719":2,"720":1,"721":1,"722":1,"723":1};

        $scope.o = {};

        $scope.setHalfHours = function() {
            $scope.halfHours = [];
            for(var i=0; i < 24*7; i++) {
                var mTime = $scope.startWeekDate.clone();
                mTime.add(i, 'h');
                $scope.halfHours.push(mTime);
                var mTime2 = mTime.clone();
                mTime2.add(30, 'm');
                $scope.halfHours.push(mTime2);
            }
        };
        $scope.setHalfHours();

        $scope.levelTwo0perators = function() {
            return _.filter($scope.operators, function(operator) {
                return operator.privilege == "<%= Operator::PRIVILEGE_SUPER_OPERATOR_LEVEL_2 %>";
            });
        };

        $scope.previousWeek = function() {
            $scope.startWeekDate.add(-1, 'w');
            $scope.setHalfHours();
            $scope.fetch();
        };

        $scope.nextWeek = function() {
            $scope.startWeekDate.add(1, 'w');
            $scope.setHalfHours();
            $scope.fetch();
        };

        $scope.fetch = function() {
            $scope.loading = true;
            $http.get("operators_presence.json?start=" + $scope.startWeekDate.format()).success(function(response) {
                $scope.operators = response.data.operators;
                $scope.loading = false;
            });
        };

        $scope.getHours = function(weekDay) {
            return _.filter($scope.getHalfHours(weekDay), function(halfHour) {
                return halfHour.minutes() == 0;
            });
        };

        $scope.getHalfHours = function(weekDay) {
            return _.filter($scope.halfHours, function(halfHour) {
                return halfHour.clone().tz('Indian/Antananarivo').add(-6, 'h').isoWeekday() == weekDay;
            });
        };

        $scope.fetch();


        $scope.endTogglePresences = function(operator, presence, reviewMode) {
            var formattedPresence = presence.format(presenceFormat);
            if($scope.initDrag && $scope.initDrag.operator == operator) {
                var presences = _.select(_.map($scope.halfHours, function(mHalfHour) {
                    return mHalfHour.format(presenceFormat);
                }), function(formattedHalfHour) {
                    return formattedHalfHour <= formattedPresence && formattedHalfHour >= $scope.initDrag.presence.format(presenceFormat);
                });

                var allSelected = true;
                _.each(presences, function(presence) {
                    if(reviewMode) {
                        allSelected = allSelected && operator.review_presences.indexOf(presence) > -1;
                    }
                    else {
                        allSelected = allSelected && operator.presences.indexOf(presence) > -1;
                    }

                });


                if(allSelected) {
                    _.each(presences, function(presence) {
                        var index;
                        if(reviewMode) {
                            index = operator.review_presences.indexOf(presence);
                            if(index > -1) {
                                operator.review_presences.splice(index, 1);
                            }
                        }
                        else {
                            index = operator.presences.indexOf(presence);
                            if(index > -1) {
                                operator.presences.splice(index, 1);
                            }
                        }
                    });

                    $scope.loading = true;
                    $.post("/review/operators_presence/remove", {
                        presences: presences,
                        operator_id: operator.id,
                        is_review: reviewMode
                    }).success(function() {
                                $scope.loading = false;
                                $scope.$apply()
                            });
                }
                else {
                    _.each(presences, function(presence) {
                        var index;
                        if(reviewMode) {
                            index = operator.review_presences.indexOf(presence);
                            if (index == -1) {
                                operator.review_presences.push(presence);
                            }
                        }
                        else {
                            index = operator.presences.indexOf(presence);
                            if (index == -1) {
                                operator.presences.push(presence);
                            }
                        }
                    });

                    $scope.loading = true;
                    $.post("/review/operators_presence/add", {
                        presences: presences,
                        operator_id: operator.id,
                        is_review: reviewMode
                    }).success(function() {
                                $scope.loading = false;
                                $scope.$apply();
                            });
                }
            }
            $scope.initDrag = null;
        };

        $scope.isOperatorPresent = function(operator, presence, reviewMode) {
            if(reviewMode) {
                return operator.review_presences.indexOf(presence.format(presenceFormat)) > -1;
            }
            else {
                return operator.presences.indexOf(presence.format(presenceFormat)) > -1;
            }

        };

        $scope.resetDay = function(weekDay) {
            $scope.loading = true;
            $.post("/review/operators_presence/reset_day", {
                day: $scope.startWeekDate.clone().add(weekDay - 1, 'd').format()
            }).success(function() {
                        $scope.fetch();
                    });

        };

        $scope.copyDay = function(weekDay, days) {
            $scope.loading = true;
            $.post("/review/operators_presence/copy_day", {
                day: $scope.startWeekDate.clone().add(weekDay - 1, 'd').format(),
                days: days
            }).success(function() {
                        $scope.fetch();
                    });

        };

        $scope.initTogglePresences = function(operator, presence) {
            $scope.initDrag = {
                operator: operator,
                presence: presence
            };
        };

        $scope.countsForHalfHour = function(halfHour) {
            var result = 0;
            _($scope.operators).each(function(operator) {
                if($scope.isOperatorPresent(operator, halfHour)) {
                    result += 1;
                }
            });
            return result;
        };

        $scope.countsToMatchForHalfHour = function(halfHour) {
            return $scope.countsToMatch[halfHour.format("EHH")];
        };
    });
</script>

<style>
    .operators-presence-container {
        width: 984px;
        margin: 20px auto 0 auto;
    }

    .operators-presence-container .table-container {
        position: relative;
    }
    .operators-presence-container table {
        overflow-x:visible;
        overflow-y:visible;
        width: 984px;
        display: block;
    }

    .operators-presence-container table tr th.hour {
        font-size: 12px;
        font-weight: 400;
    }
    .operators-presence-container table tr th.hour:nth-child(even) {
        background: #fafafa;
    }
    .operators-presence-container table tr th.hour.main-of-day {
        font-weight: 800;
        background: #C1E2F5;
    }
    .operators-presence-container table tr td {
        cursor: pointer;
        height: 20px;
        line-height: 20px;
        padding: 0;
        font-size: 12px;
    }
    .operators-presence-container table tr th {
        height: 60px;
    }
    .operators-presence-container table tr td.fixed, .operators-presence-container table tr th.fixed {
        position: absolute;
        left: -120px;
        width: 120px;
        border-right: 1px solid #eee;
    }
    .operators-presence-container table tr td .operator-working-hours {
        float: right;
        margin-right: 5px;
    }
    .operators-presence-container table tr td:nth-child(4n+2), .operators-presence-container table tr td:nth-child(4n+3) {
        background: #fafafa !important;
    }
    .operators-presence-container table tr td.selected {
        background: #0099cc !important;
    }
    .operators-presence-container table tr:nth-child(2) td.selected {
        background: #7FCAFF !important;
    }
    .operators-presence-container table tr:nth-child(3) td.selected {
        background: #A77FFF !important;
    }
    .operators-presence-container table tr:nth-child(4) td.selected {
        background: #7F97FF !important;
    }
    .operators-presence-container table tr:nth-child(5) td.selected {
        background: #E77FFF !important;
    }
    .operators-presence-container table tr:nth-child(6) td.selected {
        background: #FF7FB0 !important;
    }
    .operators-presence-container table tr:nth-child(7) td.selected {
        background: #FF9C7E !important;
    }
    .operators-presence-container table tr:nth-child(8) td.selected {
        background: #FFBD7E !important;
    }
    .operators-presence-container table tr:nth-child(9) td.selected {
        background: #FFD77E !important;
    }
    .operators-presence-container table tr:nth-child(10) td.selected {
        background: #FFF17E !important;
    }
    .operators-presence-container table tr:nth-child(11) td.selected {
        background: #F3FF7E !important;
    }
    .operators-presence-container table tr:nth-child(12) td.selected {
        background: #CAF562 !important;
    }
    .operators-presence-container table tr:nth-child(13) td.selected {
        background: #62F5C8 !important;
    }
    .operators-presence-container table tr td.day-counts {
        font-size: 12px;
        text-align: center;
        color: #0a0;
        font-weight: 800;
        width: 21px;
        line-height: 14px;
        padding: 5px 0;
    }
    .operators-presence-container table tr td.warn {
        color: #cc0000;
    }
    .operators-presence-container table tr td.warn2 {
        color: #FF6E00;
    }
    .loading {
        position: fixed;
        top: 0;
        left: 50%;
        background: #0099cc;
        color: white;
        width: 160px;
        height: 25px;
        line-height: 24px;
        text-align: center;
        font-size: 12px;
        margin-left: -100px;
        border-radius: 0 0 4px 4px;
    }

    .day-buttons {
        position: absolute;
        top: 0;
        right: -130px;
    }
    .day-buttons .btn {
        width: 120px;
        display: block;
        margin: 5px 0;
    }

</style>

<div ng-app="backofficeApp" ng-controller="OperatorsPresenceCtrl" class="operators-presence-container">
  <h1>Operator presence times</h1>

  <div class="loading" ng-show="loading">Loading...</div>

  <br>
  <h5>
    <a href="/review/operators_presence.csv?start={{ startWeekDate.format() }}" target="_blank" class="btn btn-default">Recap</a>
    <div ng-click="fetch()" class="btn btn-default">Refresh</div>
    <div class="btn btn-default" ng-click="previousWeek()"><</div>
    <div class="btn btn-default" ng-click="nextWeek()">></div>
    Week {{ startWeekDate.format("W") }} of {{ startWeekDate.format("YYYY") }}: {{ startWeekDate.format("dddd D MMMM") }} - {{ endWeekDate.format("dddd D MMMM") }}
  </h5>
  <br>
  <br>

  <div class="table-container" ng-repeat="weekday in [1, 2, 3, 4, 5, 6, 7]">
      <table class="table table-stripped">
        <tr>
          <th class="fixed">Times (Madagascar)</th>
          <th class="hour"
              ng-class="(hour.clone().tz('Indian/Antananarivo').format('HH') == '06')?'main-of-day':''"
              ng-repeat="hour in getHours(weekday) track by $index"
              colspan="2">
            {{ (hour.clone().tz("Indian/Antananarivo").format("HH") == "06")?(hour.clone().tz("Indian/Antananarivo").format("ddd HH")):(hour.clone().tz("Indian/Antananarivo").format("HH")) }}h
          </th>
        </tr>
        <tr ng-repeat="operator in operators track by $index">
          <td class="fixed">
            <span class="operator-name">{{ operator.stars }} {{ operator.name }}</span>
            <span class="operator-working-hours">{{ operator.presences.length / 2.0 }}h</span>
          </td>
          <td ng-repeat="halfHour in getHalfHours(weekday) track by $index"
              ng-mouseDown="initTogglePresences(operator, halfHour)"
              ng-mouseUp="endTogglePresences(operator, halfHour)"
              ng-class="(isOperatorPresent(operator, halfHour))?'selected':''"
              >
          </td>
        </tr>

        <tr ng-repeat="operator in levelTwo0perators() track by $index">
          <td class="fixed">
            <span class="operator-name">{{ operator.stars }} {{ operator.name }} (rv)</span>
            <span class="operator-working-hours">{{ operator.review_presences.length / 2.0 }}h</span>
          </td>
          <td ng-repeat="halfHour in getHalfHours(weekday) track by $index"
              ng-mouseDown="initTogglePresences(operator, halfHour)"
              ng-mouseUp="endTogglePresences(operator, halfHour, true)"
              ng-class="(isOperatorPresent(operator, halfHour, true))?'selected':''"
          >
          </td>
        </tr>

        <tr>
          <td class="fixed"></td>
          <td class="day-counts"
              ng-repeat="halfHour in getHalfHours(weekday) track by $index"
              ng-class="(countsForHalfHour(halfHour) < countsToMatchForHalfHour(halfHour))?'warn':((countsForHalfHour(halfHour) > countsToMatchForHalfHour(halfHour))?'warn2':'')"
              >
            {{ countsForHalfHour(halfHour) }}<br>
            {{ countsToMatchForHalfHour(halfHour) }}
          </td>
        </tr>
      </table>

    <div class="day-buttons">
      <div class="btn btn-warning btn-xs" ng-click="resetDay(weekday)">Reset</div>
      <div class="btn btn-warning btn-xs" ng-click="copyDay(weekday, 1)">Copy to next day</div>

      <div class="btn btn-warning btn-xs" ng-click="copyDay(weekday, 7)">Copy to next week</div>
    </div>
  </div>
</div>