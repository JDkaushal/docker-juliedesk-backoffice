<%=render 'invitation_already_sent_base_functions'%>

<script>
    var isPostpone = <%= (messages_thread.event_data[:event_id].present?)?"true":"false" %>;
    window.leftColumnMessage = "Create event";

    var noDateFitsType = "<%=
        date_times_to_check = JSON.parse(@julie_action.message_classification.date_times)
        suggested_date_times = @messages_thread.suggested_date_times
        if date_times_to_check.length > 1
            if (date_times_to_check & suggested_date_times).empty?
                "not_suggested_multiple"
            else
                "suggested_multiple"
            end
        else
            if (date_times_to_check & suggested_date_times).empty?
                "not_suggested_single"
            else
                "suggested_single"
            end
        end
        %>";

    window.drawCalendarCallback = function(){
        window.activateCalendarWithParams({
            mode: "create_event",
            date_times: <%== (JSON.parse(
            @julie_action.message_classification.date_times || "[]").select{|dt|dt['date']}.map{|dt| dt['date']}.map{|date|
              {
                      mode: "to_check",
                      date: date
              }
            } + @messages_thread.suggested_date_times.select{|dt| dt['date']}.map{|dt| dt['date']}.map{|date|
              {
                      mode: "already_suggested",
                      date: date
              }
            }).to_json %>,
            email: window.threadAccount.email,
            duration: window.threadComputedData.duration,
            calendarandEventsLoadedFirstTimeCallback: function() {
                if($(".suggested-date-time").length > 0) {
                    var dateTime = $(".suggested-date-time:eq(0)").data("date");
                    if (dateTime) {
                        setTimeout(function() {
                            window.currentCalendar.selectSuggestedEvent(dateTime);
                        }, 100);
                    }
                }
            }
        });
    };

    window.afterReplyBoxInitCallback = function() {
        window.setReplyMessage("");
    };


    $(function () {
        $(".messages-thread-info-panel .create-event-panel").show();
        if(window.threadComputedData.client_agreement) {
            $(".messages-thread-info-panel .create-event-panel #create-event-button").html("Create event");
            if(isPostpone) {
                $(".messages-thread-info-panel .create-event-panel #create-event-button").html("Update event");
                window.afterEventFetched = function() {
//                    window.otherEmails = _.map(window.currentEventTile.event.attendees, function (attendee) {
//                        return attendee.email;
//                    });
                    window.otherEmails = [];
                }
            }
            $(".messages-thread-info-panel .create-event-panel .suggested-date-time-container input[type='checkbox']").hide();
        }
        else {
            $(".messages-thread-info-panel .create-event-panel #create-event-button").html("Select");
        }

        var currentAppointment = window.getCurrentAppointment();
        if(currentAppointment && currentAppointment.include_email_in_notes) {
            $("input[type=checkbox]#include-email-in-notes").attr("checked", true);
        }

        $(".messages-thread-info-panel .create-event-panel .suggested-date-time-container input[type='checkbox']").change(function() {
            if($(".messages-thread-info-panel .create-event-panel .suggested-date-time-container input[type='checkbox']:checked").length > 0) {
                $("#create-event-button").removeAttr('disabled');
            }
            else {
                $("#create-event-button").attr('disabled', true);
            }
        });

        $("#no-date-fits").click(function () {
            window.timeSlotToCreate = null;
            $(".messages-thread-info-panel .create-event-panel").hide();
            if(window.threadComputedData.client_agreement) {
                window.currentCalendar.initialData.mode = "suggest_dates";
                $(".messages-thread-info-panel .message-container").html("Pick new availabilities");
            }
            else {
                var timeSlotsToCheck = $(".messages-thread-info-panel .create-event-panel .suggested-date-time").map(function() {
                    var $suggestedDateTime = $(this);
                    return moment.tz($suggestedDateTime.data("date"), $suggestedDateTime.data("timezone")).format();
                }).get();
                var messageBuilder = $('#reply-area').scope();

                $(".calendar-container").addClass("minimized");
                window.setReplyMessage(messageBuilder.generateReply({
                    action: "client_agreement",
                    isPostpone: isPostpone,
                    dateTimesToCheck: timeSlotsToCheck,
                    isAvailable: false,
                    appointment: window.getCurrentAppointment(),
                    timezoneId: window.threadComputedData.timezone,
                    defaultTimezoneId: window.threadAccount.default_timezone_id,
                    locale: window.threadComputedData.locale
                }), "only_client");
            }

        });

        $("#invitation-already-sent-button").click(function () {
            window.invitationAlreadySent = true;
            window.currentCalendar.initialData.mode = "select_events";
            $(".messages-thread-info-panel .message-container").html("Invitation already sent");
            $('.create-event-panel').hide();
            enableInvitationAlreadySentFlow();
        });

        function enableInvitationAlreadySentFlow() {

            $("#thread-header-other-entries-container").on('click', '#confirm_invitation_noted', function(e) {
                $(".calendar-container").addClass("minimized");
                $(".left-column").animate({scrollTop: $(".reply-box").position().top + 30}, 300);
            });

            $("#thread-header-other-entries-container").on('click', '#invitation-sent-no-date-fits', function(e) {
                window.timeSlotsToSuggest = null;
                window.pickingNewAvailabilities = true;
                $(".messages-thread-info-panel .selected-events-list-container").hide();
                window.currentCalendar.initialData.mode = "suggest_dates";
                $(".messages-thread-info-panel .message-container").html("Pick new availabilities");
            });

            window.clickReplyButton = function() {
                var invitationAlreadyPresent = <%= (messages_thread.event_data[:event_id].present? && messages_thread.event_data[:event_from_invitation]) ? "true":"false" %>;

                if(window.pickingNewAvailabilities) {
                    invitationAlreadySentDeleteEvent({
                        eventId: window.selectedEvents[0].id,
                        calendarLoginUsername: window.selectedEvents[0].calendar_login_username,
                        eventUrl: window.selectedEvents[0].url,
                        calendarId: window.selectedEvents[0].calId
                    }, function() {
                        associateInvitationToThread(true);
                    });
                    // When another invitation has been received we want to discard the current and link the new with the current thread
                }else if(invitationAlreadyPresent) {
                    var currentEventId = window.currentEventTile.eventId;
                    // Don't
                    if(currentEventId == window.selectedEvents[0].id) {
                        var data = {
                            text: $("textarea#reply-text").val(),
                            generated_text: window.currentFullMessageWithFooter,
                            to: window.currentRecipients().to,
                            cc: window.currentRecipients().cc,
                            done: true,
                            processed_in: Date.now() - window.startedAt,
                            messages_thread_id: "<%= @messages_thread.id %>"
                        };

                        $.ajax({
                            url: "/julie_actions/<%= @julie_action.id %>/update",
                            method: "post",
                            data: data
                        });
                        window.sendReply();
                    }else {
                        invitationAlreadySentDeleteEvent({
                            eventId: currentEventId,
                            calendarLoginUsername: window.currentEventTile.calendarLoginUsername,
                            eventUrl: window.currentEventTile.eventUrl,
                            calendarId: window.currentEventTile.calendarId
                        }, function() {
                            associateInvitationToThread(false);
                        });
                    }
                }else{
                    associateInvitationToThread(false);
                }
            };
        };

        $("#create-event-button").click(function () {
            if(window.threadComputedData.client_agreement) {
                window.currentEventFromInvitation = "<%= @messages_thread.event_data[:event_from_invitation] %>" == "true";

                console.log('window.currentEventFromInvitation', window.currentEventFromInvitation);
                $("#create-event-button").attr('disabled', true);
                $(".creating-event-message").html("Creating...");
                var start = moment(window.timeSlotToCreate).tz(window.timeSlotToCreateTimezone);
                var end = start.clone();
                end.add('m', <%= @messages_thread.computed_data[:duration] %>);

                $(".calendar-container").addClass("minimized");

               var location = window.threadComputedData.location;

                var emailInNotes = "";
                if($("input[type=checkbox]#include-email-in-notes:checked").length > 0) {
                    <% server_message = @messages_thread.messages.select{|m| m.id == @julie_action.message_classification.message_id}.first.server_message %>
                    var textData = <%== {text: "#{"- "*30}\n#{server_message['subject']}\n#{server_message['text']}\n#{"- "*30}"}.to_json %>;
                    emailInNotes = "\n\n" + textData.text;
                }

                var description = window.threadComputedData.notes + "\n" + window.threadComputedData.other_notes + emailInNotes;

                if(window.getCurrentAppointment().appointment_kind_hash.is_virtual){
                    if(window.threadComputedData.call_instructions.event_instructions)
                        location = window.threadComputedData.call_instructions.event_instructions;

                    if(window.currentEventTile) {
                        var vmHelper = angular.element($('#virtual-meetings-helper')).scope();
                        var currentEventNotesNode = $('.created-event-panel .notes');
                        var currentEventNotes = currentEventNotesNode.val();
                        var newEventDescription = '';
                        if(vmHelper && vmHelper.isVirtualAppointment()){
                            var otherNotesRegex = new RegExp(/- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -(.)* /g);
                            var regExResult = otherNotesRegex.exec(currentEventNotes.replace(/\n/g,'__n'));
                            if(regExResult != null){
                                newEventDescription = $('.classic-info-panel #notes').val() + "\n\n" + regExResult[0].replace(/__n/g,'\n');
                                description = newEventDescription;
                            }
                        }
                    }
                }

                var requestParams = {
                    action: "create_event",
                    email: "<%= @messages_thread.account_email %>",
                    summary: window.threadComputedData.summary,
                    description: description,
                    attendees: <%== @messages_thread.computed_data[:attendees].select{|a| a['isPresent'] == 'true' && a['email'].present?}.to_json %>,
                    location: location,
                    all_day: false,
                    private: window.threadComputedData.private,
                    start: start.format(),
                    end: end.format(),
                    start_timezone: window.timeSlotToCreateTimezone,
                    end_timezone: window.timeSlotToCreateTimezone,
                    calendar_login_username: window.threadComputedData.calendar_login_username
                };
                if(isPostpone && !window.currentEventFromInvitation) {
                    window.currentEventId = "<%= @messages_thread.event_data[:event_id] %>";
                    window.currentEventUrl = "<%= @messages_thread.event_data[:event_url] %>";
                    window.currentCalendarId = "<%= @messages_thread.event_data[:calendar_id] %>";
                    window.currentCalendarLoginUsername = decodeURI("<%= @messages_thread.event_data[:calendar_login_username] %>".replace('%5C', '\\'));
                    _.each({
                        action: "update_event",
                        event_id: window.currentEventId,
                        event_url: window.currentEventUrl,
                        calendar_id: window.currentCalendarId,
                        calendar_login_username: window.currentCalendarLoginUsername
                    }, function(v, k) {
                        requestParams[k] = v;
                    });
                }

                if(window.currentEventFromInvitation) {
                    window.currentEventTile.doneEditingCallback = function() {
                        window.actionDeletedEvent = true;
                        createOrUpdateEvent(start, requestParams);
                    };
                    window.currentEventTile.deleteEvent();
                }else {
                    createOrUpdateEvent(start, requestParams);
                }
            }
            else {
                var availableTimeSlots = $(".messages-thread-info-panel .create-event-panel .suggested-date-time-container input[type='checkbox']:checked").map(function() {
                    var $suggestedDateTime = $(this).closest(".suggested-date-time-container").find(".suggested-date-time");
                    return moment.tz($suggestedDateTime.data("date"), $suggestedDateTime.data("timezone")).format();
                }).get();
                var messageBuilder = $('#reply-area').scope();
                $(".calendar-container").addClass("minimized");
                window.setReplyMessage(messageBuilder.generateReply({
                    action: "client_agreement",
                    isPostpone: isPostpone,
                    dateTimesToCheck: availableTimeSlots,
                    isAvailable: true,
                    appointment: window.getCurrentAppointment(),
                    timezoneId: window.threadComputedData.timezone,
                    defaultTimezoneId: window.threadAccount.default_timezone_id,
                    locale: window.threadComputedData.locale
                }), "only_client");
            }
            $('.email.extended').removeClass('extended');
        });
    });

    var createOrUpdateEvent = function(start, requestParams) {

        CommonHelpers.externalRequest(requestParams, function (e) {

            window.currentCalendar.refreshEvents();

            if(!isPostpone || window.currentEventFromInvitation) {
                window.currentEventId = e.data.event_id;
                window.currentEventUrl = e.data.event_url;
                window.currentCalendarId = e.data.calendar_id;
                window.currentCalendarLoginUsername = window.threadComputedData.calendar_login_username;
            }

            var message = '';
            var callInstructionsMessage = '';

            var messageBuilder = $('#reply-area').scope();
            var attendeesMng = $('#attendeesCtrl').scope();

            message += messageBuilder.generateReply({
                action: "invites_sent",
                isPostpone: isPostpone && !window.currentEventFromInvitation,
                timeSlotToCreate: window.timeSlotToCreate,
                appointment: window.getCurrentAppointment(),
                address: window.getCurrentAddress(),
                timezoneId: window.threadComputedData.timezone,
                defaultTimezoneId: window.threadAccount.default_timezone_id,
                allTimezoneIds: <%== @messages_thread.all_timezones.to_json %>,
                attendeesWithMissingInfos: window.getPresentAttendeesWithMissingInfos(),
                locale: window.threadComputedData.locale
            });

            var data = {
                event_id: window.currentEventId,
                event_url: window.currentEventUrl,
                calendar_id: window.currentCalendarId,
                calendar_login_username: window.currentCalendarLoginUsername,
                done: true,
                messages_thread_id: "<%= @messages_thread.id %>",
                event_booked_date: start.format()
            };

            if(window.threadComputedData.is_virtual_appointment){
                var call_instructions = window.threadComputedData.call_instructions;

                if(isPostpone){
                    if($('#event_update_vm_ctrl').length > 0)
                        call_instructions = angular.element($('#event_update_vm_ctrl')).scope().currentConf;
                    else
                        call_instructions = window.threadComputedData.call_instructions;

                    data['call_instructions'] = call_instructions;

                    // We resynchronize the contacts when updating the event in case we updated the call instructions of one of them
                    $.ajax({
                        url: "/client_contacts/synchronize",
                        type: "POST",
                        data: {client_email: window.threadAccount.email, contacts: JSON.stringify(window.getInfoPanelAttendees())},
                        success: function (e) {
                            console.log('Contacts Synchronized');
                        },
                        error: function (e) {
                            console.log("Error: ", e);
                        }
                    });
                }
                var messageParams = {
                    action: 'send_call_instructions',
                    callInstructions: call_instructions,
                    locale: window.threadComputedData.locale
                };
                var currentAppointmentKind = window.getCurrentAppointment().appointment_kind_hash.family_kind;

                if(( currentAppointmentKind == 'call' || currentAppointmentKind == 'skype' ) && !call_instructions.details){
                    messageParams['askCallInstructions'] = attendeesMng.mustAskCallInstructions(currentAppointmentKind);
                }

                callInstructionsMessage = messageBuilder.generateReply(messageParams);

                if(callInstructionsMessage != ''){
                    message += "\n\n";

                    message += callInstructionsMessage;
                }
            }

            var courtesyStringNeeded = !window.getCurrentAppointment().appointment_kind_hash.is_virtual && !window.getCurrentAddress();
            var previousInformationGivenOrAsked = (callInstructionsMessage != '' || courtesyStringNeeded);
            var missingInfosMessage = attendeesMng.checkMissingInformations({redundantCourtesy: previousInformationGivenOrAsked, sticky: previousInformationGivenOrAsked});
            if(missingInfosMessage != ''){
                message += missingInfosMessage;
            }

            window.setReplyMessage(message, 'all', window.otherEmails);

            $(".messages-thread-info-panel .create-event-panel").hide();

            $(".messages-thread-info-panel .message-container").hide();
            $(".julie-action-title .title").html("<%= I18n.t("common.to_do") %> <%= I18n.t("actions.send_confirmation_email.todo")%>");

            window.currentEventTile = new EventTile($(".messages-thread-info-panel .created-event-panel"), {
                timezoneId: window.threadComputedData.timezone,
                mode: "read_only",
                event: {},
                eventId: window.currentEventId,
                eventUrl: window.currentEventUrl,
                calendarId: window.currentCalendarId,
                calendarLoginUsername: window.currentCalendarLoginUsername,
                accountEmail: window.threadAccount.email,
                locale: window.threadComputedData.locale
            });

            $(".messages-thread-info-panel .created-event-panel").show();
            window.currentEventTile.redraw();
            window.currentEventTile.fetchEvent(function(data) {
                window.currentEventTile.displayCallingInfosForm();
                window.currentEventData = data;
                window.currentEventTile.redraw();
                setTimeout(function () {
                    $(".left-column").animate({scrollTop: $(".reply-box").position().top + 30}, 300);
                }, 1000);
            });

            $.ajax({
                type: "post",
                url: "/julie_actions/<%= @julie_action.id %>/update",
                data: data,
                success: function (e) {
                    $(".creating-event-message").html("Created.");
                }
            });
        }, function () {
            $(".creating-event-message").html("Problem while creating.");
            window.currentCalendar.refreshEvents();
            $("#create-event-button").removeAttr('disabled');
            $("#invitation-already-sent-button").removeAttr('disabled');
        });
    };

    var checkAvailabilitiesClassicReply = function() {
        var event_start_date = '';

        if(window.currentEventData && window.currentEventData.start)
            event_start_date = window.currentEventData.start.dateTime;

        $.ajax({
            url: "/julie_actions/<%= @julie_action.id %>/update",
            method: "post",
            data: {
                text: $("textarea#reply-text").val(),
                generated_text: window.currentFullMessageWithFooter,
                to: window.currentRecipients().to,
                cc: window.currentRecipients().cc,
                date_times: window.timeSlotsToSuggest,
                event_id: window.currentEventId,
                event_url: window.currentEventUrl,
                calendar_id: window.currentCalendarId,
                calendar_login_username: window.currentCalendarLoginUsername,
                deleted_event: window.actionDeletedEvent,
                done: true,
                processed_in: Date.now() - window.startedAt,
                messages_thread_id: "<%= @messages_thread.id %>",
                event_booked_date: event_start_date
            }
        });
        window.sendReply();
    };


    window.clickReplyButton = function () {
        if(isPostpone && window.timeSlotsToSuggest && window.timeSlotsToSuggest.length > 0) {
            window.deleteEventBeforeReply(function() {
                checkAvailabilitiesClassicReply();
            });
        }
        else {
            checkAvailabilitiesClassicReply();
        }
    };


    window.addEventListener("message", function (event) {

        if(event.data.message == "drawExternalEventSelection") {
            var events = event.data.events;
            var currentSelectedEvent = _.last(events);

            _.each(currentCalendar.selectedEvents, function(e) {
                if(e.id != currentSelectedEvent.id)
                    currentCalendar.selectEvent(e);
            });

            window.selectedEvents = currentSelectedEvent ? [currentSelectedEvent] : [];
            if(currentSelectedEvent) {
                setInvitationConfirmedReplyText();
            }
            redrawSelectedEventsContainer();

        }else if (event.data.message == "drawExternalEventsList") {
            window.timeSlotsToSuggest = event.data.date_times;

            if(window.invitationAlreadySent){
                setInvitationDeclinedNewAvailabilitesReplyText();
                window.redrawTimeSlotsToSuggestContainer();

                $(".time-slots-to-suggest-list-container .suggest-dates-next-button").off('click');

                $(".time-slots-to-suggest-list-container .suggest-dates-next-button").click(function(e) {
                    $(".calendar-container").addClass("minimized");
                    $('.email.extended').removeClass('extended');
                    $(".left-column").animate({scrollTop: $(".reply-box").position().top + 30}, 300);
                })
            }else{
                var messageBuilder = $('#reply-area').scope();

                window.setReplyMessage(messageBuilder.generateReply({
                    action: "suggest_dates",
                    client_agreement: true,
                    attendeesAreNoticed: true,
                    isPostpone: isPostpone,
                    locale: window.threadComputedData.locale,
                    appointment: window.getCurrentAppointment(),
                    address: window.getCurrentAddress(),
                    timeSlotsToSuggest: event.data.date_times,
                    client: window.threadAccount.usage_name,
                    timezoneId: window.threadComputedData.timezone,
                    noDateFits: noDateFitsType,
                    defaultTimezoneId: window.threadAccount.default_timezone_id
                }), "all", window.otherEmails);
                window.redrawTimeSlotsToSuggestContainer();
            }
        }
        else if (event.data.message == "drawExternalEventCreation") {
            window.timeSlotToCreate = event.data.eventStart;
            $(".suggested-date-times .suggested-date-time").removeClass("btn-primary");
            $(".suggested-date-times .suggested-date-time.other").remove();
            $(".suggested-date-times .suggested-date-time").each(function () {
                if (moment($(this).data("date")).isSame(moment(event.data.eventStart))) {
                    $(this).addClass("btn-primary");
                    window.timeSlotToCreateTimezone = $(this).data("timezone");
                }
            });
            if ($(".suggested-date-times .suggested-date-time.btn-primary").length == 0) {
                var dateString = moment(event.data.eventStart).tz(window.currentCalendar.getCalendarTimezone()).locale("<%= I18n.locale %>").format("dddd DD MMMM YYYY à HH:mm");
                window.timeSlotToCreateTimezone = window.currentCalendar.getCalendarTimezone();
                $(".suggested-date-times").append(
                        $("<div>")
                                .addClass("suggested-date-time other btn btn-sm btn-block btn-primary")
                                .html(dateString + "<br>" + window.currentCalendar.getCalendarTimezone())
                );
            }
            $("#create-event-button").removeAttr('disabled');
            $("#invitation-already-sent-button").removeAttr('disabled');
        }
    }, false);
</script>